{"ast":null,"code":"export default {\n  name: 'FileSystem',\n  data() {\n    return {\n      fileForm: {\n        name: '',\n        type: 'file',\n        size: 1\n      },\n      fileTree: [{\n        label: '根目录',\n        type: 'directory',\n        children: []\n      }],\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      totalSpace: 8192,\n      usedSpace: 0,\n      freeSpace: 8192,\n      blockSize: 32,\n      diskRows: [],\n      blocksPerRow: 32,\n      currentPath: '/',\n      loading: false,\n      currentFile: null,\n      fileContent: '',\n      isEditing: false\n    };\n  },\n  created() {\n    this.initializeDisk();\n  },\n  methods: {\n    initializeDisk() {\n      const totalBlocks = Math.ceil(this.totalSpace / this.blockSize);\n      const rows = Math.ceil(totalBlocks / this.blocksPerRow);\n      this.diskRows = Array(rows).fill().map(() => Array(this.blocksPerRow).fill().map(() => ({\n        status: 'FREE',\n        fileId: null,\n        size: this.blockSize\n      })));\n    },\n    getBlockTooltip(block) {\n      if (block.status === 'ALLOCATED') {\n        return `文件: ${block.fileId}\\n大小: ${block.size}MB`;\n      }\n      return '空闲块';\n    },\n    handleNodeClick(data) {\n      if (data.type === 'directory') {\n        this.currentFile = null;\n        this.fileContent = '';\n      } else if (data.type === 'file') {\n        this.currentFile = data.label;\n        this.fileContent = '文件内容示例';\n      }\n    },\n    deleteNode(node, data) {\n      this.$message.success(`${data.type === 'directory' ? '目录' : '文件'}删除成功`);\n    },\n    createFileOrDir() {\n      this.$message.success(`${this.fileForm.type === 'directory' ? '目录' : '文件'}创建成功`);\n      this.fileForm.name = '';\n    }\n  }\n};","map":{"version":3,"names":["name","data","fileForm","type","size","fileTree","label","children","defaultProps","totalSpace","usedSpace","freeSpace","blockSize","diskRows","blocksPerRow","currentPath","loading","currentFile","fileContent","isEditing","created","initializeDisk","methods","totalBlocks","Math","ceil","rows","Array","fill","map","status","fileId","getBlockTooltip","block","handleNodeClick","deleteNode","node","$message","success","createFileOrDir"],"sources":["src/components/FileSystem.vue"],"sourcesContent":["<template>\n  <div class=\"file-system\">\n    <div class=\"file-control\">\n      <el-form :model=\"fileForm\" label-width=\"100px\">\n        <el-form-item label=\"名称\">\n          <el-input v-model=\"fileForm.name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"类型\">\n          <el-radio-group v-model=\"fileForm.type\">\n            <el-radio label=\"file\">文件</el-radio>\n            <el-radio label=\"directory\">目录</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item v-if=\"fileForm.type === 'file'\" label=\"文件大小(MB)\" label-width=\"165px\">\n          <el-input-number v-model=\"fileForm.size\" :min=\"1\" :max=\"1024\"></el-input-number>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"createFileOrDir\">创建</el-button>\n        </el-form-item>\n      </el-form>\n\n      <div class=\"file-tree\">\n        <h3>文件系统结构</h3>\n        <el-tree\n          :data=\"fileTree\"\n          :props=\"defaultProps\"\n          @node-click=\"handleNodeClick\"\n        >\n          <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\n            <span>\n              <i :class=\"data.type === 'directory' ? 'el-icon-folder' : 'el-icon-document'\"></i>\n              {{ node.label }}\n            </span>\n            <span>\n              <el-button\n                type=\"text\"\n                size=\"mini\"\n                @click=\"() => deleteNode(node, data)\">\n                删除\n              </el-button>\n            </span>\n          </span>\n        </el-tree>\n      </div>\n    </div>\n\n    <div class=\"disk-blocks\">\n      <h2>磁盘空间分配</h2>\n      <div class=\"disk-info\">\n        <div>总空间: {{ totalSpace }}MB</div>\n        <div>已用空间: {{ usedSpace }}MB</div>\n        <div>空闲空间: {{ freeSpace }}MB</div>\n      </div>\n      \n      <div class=\"disk-blocks-grid\">\n        <div v-for=\"(row, rowIndex) in diskRows\" :key=\"rowIndex\" class=\"disk-row\">\n          <div\n            v-for=\"(block, blockIndex) in row\"\n            :key=\"blockIndex\"\n            class=\"disk-block\"\n            :class=\"{\n              'allocated': block.status === 'ALLOCATED',\n              'free': block.status === 'FREE'\n            }\"\n            :title=\"getBlockTooltip(block)\"\n          ></div>\n        </div>\n      </div>\n\n      <!-- 添加文件内容显示和编辑区域 -->\n      <div class=\"file-content-area\">\n        <div class=\"content-header\">\n          <h3>文件内容</h3>\n          <el-button \n            type=\"primary\" \n            size=\"small\" \n            :disabled=\"!currentFile\"\n            @click=\"isEditing = !isEditing\"\n          >\n            {{ isEditing ? '保存' : '修改' }}\n          </el-button>\n        </div>\n        <div class=\"content-body\">\n          <el-input\n            v-if=\"isEditing\"\n            type=\"textarea\"\n            v-model=\"fileContent\"\n            :rows=\"10\"\n            placeholder=\"请输入文件内容\"\n          ></el-input>\n          <div v-else class=\"content-display\">\n            {{ fileContent || '暂无文件内容' }}\n          </div>\n        </div>\n      </div>\n    </div>\n    \n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'FileSystem',\n  data() {\n    return {\n      fileForm: {\n        name: '',\n        type: 'file',\n        size: 1\n      },\n      fileTree: [{\n        label: '根目录',\n        type: 'directory',\n        children: []\n      }],\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      totalSpace: 8192,\n      usedSpace: 0,\n      freeSpace: 8192,\n      blockSize: 32,\n      diskRows: [],\n      blocksPerRow: 32,\n      currentPath: '/',\n      loading: false,\n      currentFile: null,\n      fileContent: '',\n      isEditing: false\n    }\n  },\n  created() {\n    this.initializeDisk()\n  },\n  methods: {\n    initializeDisk() {\n      const totalBlocks = Math.ceil(this.totalSpace / this.blockSize)\n      const rows = Math.ceil(totalBlocks / this.blocksPerRow)\n      \n      this.diskRows = Array(rows).fill().map(() => \n        Array(this.blocksPerRow).fill().map(() => ({\n          status: 'FREE',\n          fileId: null,\n          size: this.blockSize\n        }))\n      )\n    },\n\n    getBlockTooltip(block) {\n      if (block.status === 'ALLOCATED') {\n        return `文件: ${block.fileId}\\n大小: ${block.size}MB`\n      }\n      return '空闲块'\n    },\n\n    handleNodeClick(data) {\n      if (data.type === 'directory') {\n        this.currentFile = null\n        this.fileContent = ''\n      } else if (data.type === 'file') {\n        this.currentFile = data.label\n        this.fileContent = '文件内容示例'\n      }\n    },\n\n    deleteNode(node, data) {\n      this.$message.success(`${data.type === 'directory' ? '目录' : '文件'}删除成功`)\n    },\n\n    createFileOrDir() {\n      this.$message.success(`${this.fileForm.type === 'directory' ? '目录' : '文件'}创建成功`)\n      this.fileForm.name = ''\n    }\n  }\n}\n</script>\n\n<style scoped>\n.file-system {\n  display: flex;\n  gap: 20px;\n  padding: 20px;\n  height: calc(100vh - 120px); /* 减去头部和padding的高度 */\n}\n\n.file-control {\n  flex: 4;\n  display: flex;\n  flex-direction: column;\n  border-right: 1px solid #dcdfe6;\n  padding-right: 20px;\n  font-size: 16px;\n}\n\n/* 添加表单相关样式 */\n:deep(.el-form-item__label) {\n  font-size: 16px !important;\n}\n\n:deep(.el-input__inner) {\n  font-size: 16px !important;\n}\n\n:deep(.el-radio__label) {\n  font-size: 16px !important;\n}\n\n:deep(.el-input-number__decrease),\n:deep(.el-input-number__increase) {\n  font-size: 16px !important;\n}\n\n:deep(.el-input-number__input) {\n  font-size: 16px !important;\n}\n\n:deep(.el-button) {\n  font-size: 16px !important;\n}\n\n.file-tree {\n  margin-top: 20px;\n  flex: 1;\n  overflow-y: auto;\n}\n\n.disk-blocks {\n  flex: 6;\n  display: flex;\n  flex-direction: column;\n}\n\n.disk-info {\n  display: flex;\n  gap: 20px;\n  margin-bottom: 15px;\n  font-size: 16px;\n}\n\n.disk-blocks-grid {\n  border: 1px solid #dcdfe6;\n  padding: 15px;\n  background-color: #ffffff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: fit-content;\n}\n\n.disk-row {\n  display: flex;\n  gap: 2px;\n  margin-bottom: 2px;\n  justify-content: center;\n}\n\n.disk-block {\n  width: 28px;\n  height: 28px;\n  border: 1px solid #dcdfe6;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.disk-block:hover {\n  transform: scale(1.1);\n  z-index: 1;\n}\n\n.disk-block.allocated {\n  background-color: #409eff;\n}\n\n.disk-block.free {\n  background-color: #f0f9eb;\n}\n\n.custom-tree-node {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 14px;\n  padding-right: 8px;\n}\n\n.file-content-area {\n  margin-top: 20px;\n  border: 1px solid #dcdfe6;\n  border-radius: 4px;\n  padding: 15px;\n  background-color: #ffffff;\n}\n\n.content-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 5px;\n}\n\n.content-header h3 {\n  margin: 0;\n  font-size: 16px;\n}\n\n.content-body {\n  min-height: 200px;\n}\n\n.content-display {\n  padding: 10px;\n  min-height: 200px;\n  background-color: #f5f7fa;\n  border-radius: 4px;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n:deep(.el-textarea__inner) {\n  font-size: 14px;\n  font-family: monospace;\n}\n</style> "],"mappings":"AAqGA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;QACAF,IAAA;QACAG,IAAA;QACAC,IAAA;MACA;MACAC,QAAA;QACAC,KAAA;QACAH,IAAA;QACAI,QAAA;MACA;MACAC,YAAA;QACAD,QAAA;QACAD,KAAA;MACA;MACAG,UAAA;MACAC,SAAA;MACAC,SAAA;MACAC,SAAA;MACAC,QAAA;MACAC,YAAA;MACAC,WAAA;MACAC,OAAA;MACAC,WAAA;MACAC,WAAA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,cAAA;EACA;EACAC,OAAA;IACAD,eAAA;MACA,MAAAE,WAAA,GAAAC,IAAA,CAAAC,IAAA,MAAAhB,UAAA,QAAAG,SAAA;MACA,MAAAc,IAAA,GAAAF,IAAA,CAAAC,IAAA,CAAAF,WAAA,QAAAT,YAAA;MAEA,KAAAD,QAAA,GAAAc,KAAA,CAAAD,IAAA,EAAAE,IAAA,GAAAC,GAAA,OACAF,KAAA,MAAAb,YAAA,EAAAc,IAAA,GAAAC,GAAA;QACAC,MAAA;QACAC,MAAA;QACA3B,IAAA,OAAAQ;MACA,GACA;IACA;IAEAoB,gBAAAC,KAAA;MACA,IAAAA,KAAA,CAAAH,MAAA;QACA,cAAAG,KAAA,CAAAF,MAAA,SAAAE,KAAA,CAAA7B,IAAA;MACA;MACA;IACA;IAEA8B,gBAAAjC,IAAA;MACA,IAAAA,IAAA,CAAAE,IAAA;QACA,KAAAc,WAAA;QACA,KAAAC,WAAA;MACA,WAAAjB,IAAA,CAAAE,IAAA;QACA,KAAAc,WAAA,GAAAhB,IAAA,CAAAK,KAAA;QACA,KAAAY,WAAA;MACA;IACA;IAEAiB,WAAAC,IAAA,EAAAnC,IAAA;MACA,KAAAoC,QAAA,CAAAC,OAAA,IAAArC,IAAA,CAAAE,IAAA;IACA;IAEAoC,gBAAA;MACA,KAAAF,QAAA,CAAAC,OAAA,SAAApC,QAAA,CAAAC,IAAA;MACA,KAAAD,QAAA,CAAAF,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}