{"ast":null,"code":"import ProcessManagement from './components/ProcessManagement.vue';\nimport MemoryManagement from './components/MemoryManagement.vue';\nimport FileSystem from './components/FileSystem.vue';\nimport DeviceManagement from './components/DeviceManagement.vue';\nexport default {\n  name: 'App',\n  components: {\n    ProcessManagement,\n    MemoryManagement,\n    FileSystem,\n    DeviceManagement\n  },\n  data() {\n    return {\n      activeTab: 'process',\n      isRunning: false,\n      currentTime: '00:00:00',\n      timer: null,\n      seconds: 0\n    };\n  },\n  methods: {\n    toggleClock() {\n      if (this.isRunning) {\n        this.pauseClock();\n      } else {\n        this.startClock();\n      }\n    },\n    startClock() {\n      this.isRunning = true;\n      this.timer = setInterval(() => {\n        this.seconds++;\n        this.updateDisplay();\n      }, 1000);\n    },\n    pauseClock() {\n      this.isRunning = false;\n      clearInterval(this.timer);\n    },\n    updateDisplay() {\n      const hours = Math.floor(this.seconds / 3600);\n      const minutes = Math.floor(this.seconds % 3600 / 60);\n      const secs = this.seconds % 60;\n      this.currentTime = `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;\n    }\n  },\n  beforeDestroy() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n  }\n};","map":{"version":3,"names":["ProcessManagement","MemoryManagement","FileSystem","DeviceManagement","name","components","data","activeTab","isRunning","currentTime","timer","seconds","methods","toggleClock","pauseClock","startClock","setInterval","updateDisplay","clearInterval","hours","Math","floor","minutes","secs","String","padStart","beforeDestroy"],"sources":["src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"system-clock\">\n      <el-button type=\"primary\" @click=\"toggleClock\">\n        {{ isRunning ? '暂停' : '启动' }}\n      </el-button>\n      <span class=\"clock-display\">{{ currentTime }}</span>\n    </div>\n    \n    <el-tabs v-model=\"activeTab\" type=\"border-card\">\n      <el-tab-pane label=\"进程与内存管理\" name=\"process\">\n        <div class=\"management-container\">\n          <process-management class=\"left-panel\"></process-management>\n          <memory-management class=\"right-panel\"></memory-management>\n        </div>\n      </el-tab-pane>\n      \n      <el-tab-pane label=\"文件系统\" name=\"file\">\n        <file-system></file-system>\n      </el-tab-pane>\n      \n      <el-tab-pane label=\"设备与中断\" name=\"device\">\n        <device-management></device-management>\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n\n<script>\nimport ProcessManagement from './components/ProcessManagement.vue'\nimport MemoryManagement from './components/MemoryManagement.vue'\nimport FileSystem from './components/FileSystem.vue'\nimport DeviceManagement from './components/DeviceManagement.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    ProcessManagement,\n    MemoryManagement,\n    FileSystem,\n    DeviceManagement\n  },\n  data() {\n    return {\n      activeTab: 'process',\n      isRunning: false,\n      currentTime: '00:00:00',\n      timer: null,\n      seconds: 0\n    }\n  },\n  methods: {\n    toggleClock() {\n      if (this.isRunning) {\n        this.pauseClock()\n      } else {\n        this.startClock()\n      }\n    },\n    startClock() {\n      this.isRunning = true\n      this.timer = setInterval(() => {\n        this.seconds++\n        this.updateDisplay()\n      }, 1000)\n    },\n    pauseClock() {\n      this.isRunning = false\n      clearInterval(this.timer)\n    },\n    updateDisplay() {\n      const hours = Math.floor(this.seconds / 3600)\n      const minutes = Math.floor((this.seconds % 3600) / 60)\n      const secs = this.seconds % 60\n      this.currentTime = `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(secs).padStart(2, '0')}`\n    }\n  },\n  beforeDestroy() {\n    if (this.timer) {\n      clearInterval(this.timer)\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Microsoft YaHei', Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  margin: 0;\n  padding: 20px;\n  min-height: 100vh;\n  background-color: #f5f7fa;\n}\n\n.system-clock {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  z-index: 1000;\n}\n\n.clock-display {\n  font-size: 18px;\n  font-weight: bold;\n  font-family: monospace;\n}\n\n.management-container {\n  display: flex;\n  gap: 20px;\n}\n\n.left-panel {\n  flex: 1;\n}\n\n.right-panel {\n  flex: 1;\n}\n\n.el-tabs {\n  margin-top: 20px;\n}\n</style> "],"mappings":"AA6BA,OAAAA,iBAAA;AACA,OAAAC,gBAAA;AACA,OAAAC,UAAA;AACA,OAAAC,gBAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAL,iBAAA;IACAC,gBAAA;IACAC,UAAA;IACAC;EACA;EACAG,KAAA;IACA;MACAC,SAAA;MACAC,SAAA;MACAC,WAAA;MACAC,KAAA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACAC,YAAA;MACA,SAAAL,SAAA;QACA,KAAAM,UAAA;MACA;QACA,KAAAC,UAAA;MACA;IACA;IACAA,WAAA;MACA,KAAAP,SAAA;MACA,KAAAE,KAAA,GAAAM,WAAA;QACA,KAAAL,OAAA;QACA,KAAAM,aAAA;MACA;IACA;IACAH,WAAA;MACA,KAAAN,SAAA;MACAU,aAAA,MAAAR,KAAA;IACA;IACAO,cAAA;MACA,MAAAE,KAAA,GAAAC,IAAA,CAAAC,KAAA,MAAAV,OAAA;MACA,MAAAW,OAAA,GAAAF,IAAA,CAAAC,KAAA,MAAAV,OAAA;MACA,MAAAY,IAAA,QAAAZ,OAAA;MACA,KAAAF,WAAA,MAAAe,MAAA,CAAAL,KAAA,EAAAM,QAAA,YAAAD,MAAA,CAAAF,OAAA,EAAAG,QAAA,YAAAD,MAAA,CAAAD,IAAA,EAAAE,QAAA;IACA;EACA;EACAC,cAAA;IACA,SAAAhB,KAAA;MACAQ,aAAA,MAAAR,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}