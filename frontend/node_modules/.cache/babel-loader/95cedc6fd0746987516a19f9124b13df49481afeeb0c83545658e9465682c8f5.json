{"ast":null,"code":"import \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.function.name.js\";\nexport default {\n  name: 'FileSystem',\n  data: function data() {\n    return {\n      fileSystem: [{\n        id: 1,\n        label: '根目录',\n        type: 'directory',\n        children: []\n      }],\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      dialogVisible: false,\n      dialogTitle: '',\n      isCreatingFile: false,\n      fileForm: {\n        name: '',\n        type: 'text',\n        size: 1\n      },\n      currentNode: null\n    };\n  },\n  methods: {\n    createFile: function createFile() {\n      this.dialogTitle = '创建文件';\n      this.isCreatingFile = true;\n      this.dialogVisible = true;\n    },\n    createDirectory: function createDirectory() {\n      this.dialogTitle = '创建目录';\n      this.isCreatingFile = false;\n      this.dialogVisible = true;\n    },\n    deleteItem: function deleteItem() {\n      if (!this.currentNode) {\n        this.$message.warning('请先选择要删除的项目');\n        return;\n      }\n      this.handleDelete(this.currentNode, this.currentNode.data);\n    },\n    handleNodeClick: function handleNodeClick(data) {\n      this.currentNode = data;\n    },\n    handleEdit: function handleEdit(node, data) {\n      console.log('编辑', node, data);\n    },\n    handleDelete: function handleDelete(node, data) {\n      var _this = this;\n      this.$confirm('确认删除该' + (data.type === 'directory' ? '目录' : '文件') + '?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        var parent = node.parent;\n        var children = parent.data.children || parent.data;\n        var index = children.findIndex(function (d) {\n          return d.id === data.id;\n        });\n        children.splice(index, 1);\n        _this.$message.success('删除成功');\n      })[\"catch\"](function () {});\n    },\n    submitForm: function submitForm() {\n      if (!this.fileForm.name) {\n        this.$message.error('请输入名称');\n        return;\n      }\n      var newNode = {\n        id: Date.now(),\n        label: this.fileForm.name,\n        type: this.isCreatingFile ? 'file' : 'directory',\n        children: this.isCreatingFile ? [] : undefined\n      };\n      if (this.isCreatingFile) {\n        newNode.size = this.fileForm.size;\n        newNode.fileType = this.fileForm.type;\n      }\n      if (this.currentNode && this.currentNode.type === 'directory') {\n        if (!this.currentNode.children) {\n          this.$set(this.currentNode, 'children', []);\n        }\n        this.currentNode.children.push(newNode);\n      } else {\n        this.fileSystem[0].children.push(newNode);\n      }\n      this.dialogVisible = false;\n      this.$message.success('创建成功');\n      this.resetForm();\n    },\n    resetForm: function resetForm() {\n      this.fileForm = {\n        name: '',\n        type: 'text',\n        size: 1\n      };\n    }\n  }\n};","map":{"version":3,"names":["name","data","fileSystem","id","label","type","children","defaultProps","dialogVisible","dialogTitle","isCreatingFile","fileForm","size","currentNode","methods","createFile","createDirectory","deleteItem","$message","warning","handleDelete","handleNodeClick","handleEdit","node","console","log","_this","$confirm","confirmButtonText","cancelButtonText","then","parent","index","findIndex","d","splice","success","submitForm","error","newNode","Date","now","undefined","fileType","$set","push","resetForm"],"sources":["src/views/FileSystem.vue"],"sourcesContent":["<template>\r\n  <div class=\"filesystem-container\">\r\n    <h2>文件系统</h2>\r\n\r\n    <!-- 文件系统操作按钮 -->\r\n    <div class=\"operation-buttons\">\r\n      <el-button type=\"primary\" @click=\"createFile\">创建文件</el-button>\r\n      <el-button type=\"success\" @click=\"createDirectory\">创建目录</el-button>\r\n      <el-button type=\"danger\" @click=\"deleteItem\">删除</el-button>\r\n    </div>\r\n\r\n    <!-- 文件系统树形结构 -->\r\n    <div class=\"filesystem-tree\">\r\n      <el-tree\r\n        :data=\"fileSystem\"\r\n        :props=\"defaultProps\"\r\n        @node-click=\"handleNodeClick\"\r\n        default-expand-all>\r\n        <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\r\n          <span>\r\n            <i :class=\"data.type === 'directory' ? 'el-icon-folder' : 'el-icon-document'\"></i>\r\n            {{ node.label }}\r\n          </span>\r\n          <span>\r\n            <el-button\r\n              type=\"text\"\r\n              size=\"mini\"\r\n              @click=\"() => handleEdit(node, data)\">\r\n              编辑\r\n            </el-button>\r\n            <el-button\r\n              type=\"text\"\r\n              size=\"mini\"\r\n              @click=\"() => handleDelete(node, data)\">\r\n              删除\r\n            </el-button>\r\n          </span>\r\n        </span>\r\n      </el-tree>\r\n    </div>\r\n\r\n    <!-- 创建文件对话框 -->\r\n    <el-dialog :title=\"dialogTitle\" :visible.sync=\"dialogVisible\" width=\"30%\">\r\n      <el-form :model=\"fileForm\" label-width=\"100px\">\r\n        <el-form-item label=\"名称\">\r\n          <el-input v-model=\"fileForm.name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"类型\" v-if=\"isCreatingFile\">\r\n          <el-select v-model=\"fileForm.type\" placeholder=\"请选择文件类型\">\r\n            <el-option label=\"文本文件\" value=\"text\"></el-option>\r\n            <el-option label=\"二进制文件\" value=\"binary\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"大小(KB)\" v-if=\"isCreatingFile\">\r\n          <el-input-number v-model=\"fileForm.size\" :min=\"1\"></el-input-number>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'FileSystem',\r\n  data() {\r\n    return {\r\n      fileSystem: [{\r\n        id: 1,\r\n        label: '根目录',\r\n        type: 'directory',\r\n        children: []\r\n      }],\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'label'\r\n      },\r\n      dialogVisible: false,\r\n      dialogTitle: '',\r\n      isCreatingFile: false,\r\n      fileForm: {\r\n        name: '',\r\n        type: 'text',\r\n        size: 1\r\n      },\r\n      currentNode: null\r\n    }\r\n  },\r\n  methods: {\r\n    createFile() {\r\n      this.dialogTitle = '创建文件'\r\n      this.isCreatingFile = true\r\n      this.dialogVisible = true\r\n    },\r\n    createDirectory() {\r\n      this.dialogTitle = '创建目录'\r\n      this.isCreatingFile = false\r\n      this.dialogVisible = true\r\n    },\r\n    deleteItem() {\r\n      if (!this.currentNode) {\r\n        this.$message.warning('请先选择要删除的项目')\r\n        return\r\n      }\r\n      this.handleDelete(this.currentNode, this.currentNode.data)\r\n    },\r\n    handleNodeClick(data) {\r\n      this.currentNode = data\r\n    },\r\n    handleEdit(node, data) {\r\n      console.log('编辑', node, data)\r\n    },\r\n    handleDelete(node, data) {\r\n      this.$confirm('确认删除该' + (data.type === 'directory' ? '目录' : '文件') + '?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        const parent = node.parent\r\n        const children = parent.data.children || parent.data\r\n        const index = children.findIndex(d => d.id === data.id)\r\n        children.splice(index, 1)\r\n        this.$message.success('删除成功')\r\n      }).catch(() => {})\r\n    },\r\n    submitForm() {\r\n      if (!this.fileForm.name) {\r\n        this.$message.error('请输入名称')\r\n        return\r\n      }\r\n\r\n      const newNode = {\r\n        id: Date.now(),\r\n        label: this.fileForm.name,\r\n        type: this.isCreatingFile ? 'file' : 'directory',\r\n        children: this.isCreatingFile ? [] : undefined\r\n      }\r\n\r\n      if (this.isCreatingFile) {\r\n        newNode.size = this.fileForm.size\r\n        newNode.fileType = this.fileForm.type\r\n      }\r\n\r\n      if (this.currentNode && this.currentNode.type === 'directory') {\r\n        if (!this.currentNode.children) {\r\n          this.$set(this.currentNode, 'children', [])\r\n        }\r\n        this.currentNode.children.push(newNode)\r\n      } else {\r\n        this.fileSystem[0].children.push(newNode)\r\n      }\r\n\r\n      this.dialogVisible = false\r\n      this.$message.success('创建成功')\r\n      this.resetForm()\r\n    },\r\n    resetForm() {\r\n      this.fileForm = {\r\n        name: '',\r\n        type: 'text',\r\n        size: 1\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.filesystem-container {\r\n  padding: 20px;\r\n}\r\n\r\n.operation-buttons {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.operation-buttons .el-button {\r\n  margin-right: 10px;\r\n}\r\n\r\n.filesystem-tree {\r\n  margin-top: 20px;\r\n}\r\n\r\n.custom-tree-node {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: 14px;\r\n  padding-right: 8px;\r\n}\r\n\r\n.custom-tree-node i {\r\n  margin-right: 5px;\r\n}\r\n</style> "],"mappings":";;;;;AAkEA;EACAA,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,UAAA;QACAC,EAAA;QACAC,KAAA;QACAC,IAAA;QACAC,QAAA;MACA;MACAC,YAAA;QACAD,QAAA;QACAF,KAAA;MACA;MACAI,aAAA;MACAC,WAAA;MACAC,cAAA;MACAC,QAAA;QACAX,IAAA;QACAK,IAAA;QACAO,IAAA;MACA;MACAC,WAAA;IACA;EACA;EACAC,OAAA;IACAC,UAAA,WAAAA,WAAA;MACA,KAAAN,WAAA;MACA,KAAAC,cAAA;MACA,KAAAF,aAAA;IACA;IACAQ,eAAA,WAAAA,gBAAA;MACA,KAAAP,WAAA;MACA,KAAAC,cAAA;MACA,KAAAF,aAAA;IACA;IACAS,UAAA,WAAAA,WAAA;MACA,UAAAJ,WAAA;QACA,KAAAK,QAAA,CAAAC,OAAA;QACA;MACA;MACA,KAAAC,YAAA,MAAAP,WAAA,OAAAA,WAAA,CAAAZ,IAAA;IACA;IACAoB,eAAA,WAAAA,gBAAApB,IAAA;MACA,KAAAY,WAAA,GAAAZ,IAAA;IACA;IACAqB,UAAA,WAAAA,WAAAC,IAAA,EAAAtB,IAAA;MACAuB,OAAA,CAAAC,GAAA,OAAAF,IAAA,EAAAtB,IAAA;IACA;IACAmB,YAAA,WAAAA,aAAAG,IAAA,EAAAtB,IAAA;MAAA,IAAAyB,KAAA;MACA,KAAAC,QAAA,YAAA1B,IAAA,CAAAI,IAAA;QACAuB,iBAAA;QACAC,gBAAA;QACAxB,IAAA;MACA,GAAAyB,IAAA;QACA,IAAAC,MAAA,GAAAR,IAAA,CAAAQ,MAAA;QACA,IAAAzB,QAAA,GAAAyB,MAAA,CAAA9B,IAAA,CAAAK,QAAA,IAAAyB,MAAA,CAAA9B,IAAA;QACA,IAAA+B,KAAA,GAAA1B,QAAA,CAAA2B,SAAA,WAAAC,CAAA;UAAA,OAAAA,CAAA,CAAA/B,EAAA,KAAAF,IAAA,CAAAE,EAAA;QAAA;QACAG,QAAA,CAAA6B,MAAA,CAAAH,KAAA;QACAN,KAAA,CAAAR,QAAA,CAAAkB,OAAA;MACA;IACA;IACAC,UAAA,WAAAA,WAAA;MACA,UAAA1B,QAAA,CAAAX,IAAA;QACA,KAAAkB,QAAA,CAAAoB,KAAA;QACA;MACA;MAEA,IAAAC,OAAA;QACApC,EAAA,EAAAqC,IAAA,CAAAC,GAAA;QACArC,KAAA,OAAAO,QAAA,CAAAX,IAAA;QACAK,IAAA,OAAAK,cAAA;QACAJ,QAAA,OAAAI,cAAA,QAAAgC;MACA;MAEA,SAAAhC,cAAA;QACA6B,OAAA,CAAA3B,IAAA,QAAAD,QAAA,CAAAC,IAAA;QACA2B,OAAA,CAAAI,QAAA,QAAAhC,QAAA,CAAAN,IAAA;MACA;MAEA,SAAAQ,WAAA,SAAAA,WAAA,CAAAR,IAAA;QACA,UAAAQ,WAAA,CAAAP,QAAA;UACA,KAAAsC,IAAA,MAAA/B,WAAA;QACA;QACA,KAAAA,WAAA,CAAAP,QAAA,CAAAuC,IAAA,CAAAN,OAAA;MACA;QACA,KAAArC,UAAA,IAAAI,QAAA,CAAAuC,IAAA,CAAAN,OAAA;MACA;MAEA,KAAA/B,aAAA;MACA,KAAAU,QAAA,CAAAkB,OAAA;MACA,KAAAU,SAAA;IACA;IACAA,SAAA,WAAAA,UAAA;MACA,KAAAnC,QAAA;QACAX,IAAA;QACAK,IAAA;QACAO,IAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}