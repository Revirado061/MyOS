{"ast":null,"code":"export default {\n  name: 'DeviceManagement',\n  data() {\n    return {\n      devices: [{\n        deviceCode: 'A1',\n        type: 'PRINTER',\n        status: 'IDLE',\n        version: 1\n      }, {\n        deviceCode: 'A2',\n        type: 'SCANNER',\n        status: 'IDLE',\n        version: 1\n      }, {\n        deviceCode: 'A3',\n        type: 'DISK',\n        status: 'IDLE',\n        version: 1\n      }],\n      interrupts: []\n    };\n  },\n  methods: {\n    getStatusType(status) {\n      const types = {\n        'IDLE': 'success',\n        'BUSY': 'warning',\n        'ERROR': 'danger'\n      };\n      return types[status] || 'info';\n    },\n    getInterruptType(type) {\n      const types = {\n        'IO': 'warning',\n        'TIMER': 'primary',\n        'ERROR': 'danger'\n      };\n      return types[type] || 'info';\n    },\n    handleAllocate(device) {\n      device.status = 'BUSY';\n      this.addInterrupt({\n        type: 'IO',\n        message: `设备 ${device.deviceCode} 已被分配`,\n        time: new Date().toLocaleTimeString()\n      });\n    },\n    handleRelease(device) {\n      device.status = 'IDLE';\n      this.addInterrupt({\n        type: 'IO',\n        message: `设备 ${device.deviceCode} 已被释放`,\n        time: new Date().toLocaleTimeString()\n      });\n    },\n    addInterrupt(interrupt) {\n      this.interrupts.unshift(interrupt);\n      if (this.interrupts.length > 10) {\n        this.interrupts.pop();\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","devices","deviceCode","type","status","version","interrupts","methods","getStatusType","types","getInterruptType","handleAllocate","device","addInterrupt","message","time","Date","toLocaleTimeString","handleRelease","interrupt","unshift","length","pop"],"sources":["src/components/DeviceManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"device-management\">\r\n    <div class=\"device-control\">\r\n      <h3>设备管理</h3>\r\n      <el-table :data=\"devices\" style=\"width: 100%\">\r\n        <el-table-column prop=\"deviceCode\" label=\"设备编号\"></el-table-column>\r\n        <el-table-column prop=\"type\" label=\"设备类型\"></el-table-column>\r\n        <el-table-column prop=\"status\" label=\"状态\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag :type=\"getStatusType(scope.row.status)\">\r\n              {{ scope.row.status }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"primary\"\r\n              @click=\"handleAllocate(scope.row)\"\r\n              :disabled=\"scope.row.status !== 'IDLE'\">\r\n              分配\r\n            </el-button>\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"danger\"\r\n              @click=\"handleRelease(scope.row)\"\r\n              :disabled=\"scope.row.status === 'IDLE'\">\r\n              释放\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n\r\n    <div class=\"interrupt-handling\">\r\n      <h3>中断处理</h3>\r\n      <div class=\"interrupt-list\">\r\n        <el-timeline>\r\n          <el-timeline-item\r\n            v-for=\"(interrupt, index) in interrupts\"\r\n            :key=\"index\"\r\n            :type=\"getInterruptType(interrupt.type)\"\r\n            :timestamp=\"interrupt.time\">\r\n            {{ interrupt.message }}\r\n          </el-timeline-item>\r\n        </el-timeline>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'DeviceManagement',\r\n  data() {\r\n    return {\r\n      devices: [\r\n        {\r\n          deviceCode: 'A1',\r\n          type: 'PRINTER',\r\n          status: 'IDLE',\r\n          version: 1\r\n        },\r\n        {\r\n          deviceCode: 'A2',\r\n          type: 'SCANNER',\r\n          status: 'IDLE',\r\n          version: 1\r\n        },\r\n        {\r\n          deviceCode: 'A3',\r\n          type: 'DISK',\r\n          status: 'IDLE',\r\n          version: 1\r\n        }\r\n      ],\r\n      interrupts: []\r\n    }\r\n  },\r\n  methods: {\r\n    getStatusType(status) {\r\n      const types = {\r\n        'IDLE': 'success',\r\n        'BUSY': 'warning',\r\n        'ERROR': 'danger'\r\n      }\r\n      return types[status] || 'info'\r\n    },\r\n    getInterruptType(type) {\r\n      const types = {\r\n        'IO': 'warning',\r\n        'TIMER': 'primary',\r\n        'ERROR': 'danger'\r\n      }\r\n      return types[type] || 'info'\r\n    },\r\n    handleAllocate(device) {\r\n      device.status = 'BUSY'\r\n      this.addInterrupt({\r\n        type: 'IO',\r\n        message: `设备 ${device.deviceCode} 已被分配`,\r\n        time: new Date().toLocaleTimeString()\r\n      })\r\n    },\r\n    handleRelease(device) {\r\n      device.status = 'IDLE'\r\n      this.addInterrupt({\r\n        type: 'IO',\r\n        message: `设备 ${device.deviceCode} 已被释放`,\r\n        time: new Date().toLocaleTimeString()\r\n      })\r\n    },\r\n    addInterrupt(interrupt) {\r\n      this.interrupts.unshift(interrupt)\r\n      if (this.interrupts.length > 10) {\r\n        this.interrupts.pop()\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.device-management {\r\n  display: flex;\r\n  gap: 20px;\r\n  padding: 20px;\r\n}\r\n\r\n.device-control {\r\n  flex: 1;\r\n}\r\n\r\n.interrupt-handling {\r\n  flex: 1;\r\n}\r\n\r\n.interrupt-list {\r\n  height: 400px;\r\n  overflow-y: auto;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n}\r\n</style> "],"mappings":"AAqDA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA,GACA;QACAC,UAAA;QACAC,IAAA;QACAC,MAAA;QACAC,OAAA;MACA,GACA;QACAH,UAAA;QACAC,IAAA;QACAC,MAAA;QACAC,OAAA;MACA,GACA;QACAH,UAAA;QACAC,IAAA;QACAC,MAAA;QACAC,OAAA;MACA,EACA;MACAC,UAAA;IACA;EACA;EACAC,OAAA;IACAC,cAAAJ,MAAA;MACA,MAAAK,KAAA;QACA;QACA;QACA;MACA;MACA,OAAAA,KAAA,CAAAL,MAAA;IACA;IACAM,iBAAAP,IAAA;MACA,MAAAM,KAAA;QACA;QACA;QACA;MACA;MACA,OAAAA,KAAA,CAAAN,IAAA;IACA;IACAQ,eAAAC,MAAA;MACAA,MAAA,CAAAR,MAAA;MACA,KAAAS,YAAA;QACAV,IAAA;QACAW,OAAA,QAAAF,MAAA,CAAAV,UAAA;QACAa,IAAA,MAAAC,IAAA,GAAAC,kBAAA;MACA;IACA;IACAC,cAAAN,MAAA;MACAA,MAAA,CAAAR,MAAA;MACA,KAAAS,YAAA;QACAV,IAAA;QACAW,OAAA,QAAAF,MAAA,CAAAV,UAAA;QACAa,IAAA,MAAAC,IAAA,GAAAC,kBAAA;MACA;IACA;IACAJ,aAAAM,SAAA;MACA,KAAAb,UAAA,CAAAc,OAAA,CAAAD,SAAA;MACA,SAAAb,UAAA,CAAAe,MAAA;QACA,KAAAf,UAAA,CAAAgB,GAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}