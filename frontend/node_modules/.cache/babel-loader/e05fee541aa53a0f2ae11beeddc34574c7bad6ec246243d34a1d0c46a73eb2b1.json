{"ast":null,"code":"export default {\n  name: 'Interrupt',\n  data() {\n    return {\n      interruptList: [],\n      dialogVisible: false,\n      interruptForm: {\n        type: 'hardware',\n        priority: 'medium'\n      }\n    };\n  },\n  methods: {\n    triggerInterrupt() {\n      this.dialogVisible = true;\n    },\n    handleInterrupt() {\n      this.$message.success('执行中断处理');\n    },\n    handleInterruptItem(row) {\n      this.$confirm('确认处理该中断?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        const interrupt = this.interruptList.find(i => i.id === row.id);\n        if (interrupt) {\n          interrupt.status = '已处理';\n          interrupt.handleTime = new Date().toLocaleString();\n          this.$message.success('中断处理成功');\n        }\n      }).catch(() => {});\n    },\n    submitInterrupt() {\n      const newInterrupt = {\n        id: this.interruptList.length + 1,\n        type: this.interruptForm.type,\n        priority: this.interruptForm.priority,\n        status: '待处理',\n        createTime: new Date().toLocaleString(),\n        handleTime: null\n      };\n      this.interruptList.push(newInterrupt);\n      this.dialogVisible = false;\n      this.$message.success('中断触发成功');\n    },\n    getStatusType(status) {\n      switch (status) {\n        case '待处理':\n          return 'warning';\n        case '已处理':\n          return 'success';\n        default:\n          return 'info';\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","interruptList","dialogVisible","interruptForm","type","priority","methods","triggerInterrupt","handleInterrupt","$message","success","handleInterruptItem","row","$confirm","confirmButtonText","cancelButtonText","then","interrupt","find","i","id","status","handleTime","Date","toLocaleString","catch","submitInterrupt","newInterrupt","length","createTime","push","getStatusType"],"sources":["src/views/Interrupt.vue"],"sourcesContent":["<template>\r\n  <div class=\"interrupt-container\">\r\n    <h2>中断处理</h2>\r\n\r\n    <!-- 中断操作按钮 -->\r\n    <div class=\"operation-buttons\">\r\n      <el-button type=\"primary\" @click=\"triggerInterrupt\">触发中断</el-button>\r\n      <el-button type=\"success\" @click=\"handleInterrupt\">处理中断</el-button>\r\n    </div>\r\n\r\n    <!-- 中断列表 -->\r\n    <el-table :data=\"interruptList\" style=\"width: 100%; margin-top: 20px\">\r\n      <el-table-column prop=\"id\" label=\"中断ID\" width=\"100\"></el-table-column>\r\n      <el-table-column prop=\"type\" label=\"中断类型\" width=\"150\"></el-table-column>\r\n      <el-table-column prop=\"priority\" label=\"优先级\" width=\"120\"></el-table-column>\r\n      <el-table-column prop=\"status\" label=\"状态\" width=\"120\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag :type=\"getStatusType(scope.row.status)\">\r\n            {{ scope.row.status }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"createTime\" label=\"触发时间\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"handleTime\" label=\"处理时间\" width=\"180\"></el-table-column>\r\n      <el-table-column label=\"操作\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            @click=\"handleInterruptItem(scope.row)\"\r\n            :disabled=\"scope.row.status !== '待处理'\">\r\n            处理\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 触发中断对话框 -->\r\n    <el-dialog title=\"触发中断\" :visible.sync=\"dialogVisible\" width=\"30%\">\r\n      <el-form :model=\"interruptForm\" label-width=\"100px\">\r\n        <el-form-item label=\"中断类型\">\r\n          <el-select v-model=\"interruptForm.type\" placeholder=\"请选择中断类型\">\r\n            <el-option label=\"硬件中断\" value=\"hardware\"></el-option>\r\n            <el-option label=\"软件中断\" value=\"software\"></el-option>\r\n            <el-option label=\"时钟中断\" value=\"timer\"></el-option>\r\n            <el-option label=\"I/O中断\" value=\"io\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"优先级\">\r\n          <el-select v-model=\"interruptForm.priority\" placeholder=\"请选择优先级\">\r\n            <el-option label=\"高\" value=\"high\"></el-option>\r\n            <el-option label=\"中\" value=\"medium\"></el-option>\r\n            <el-option label=\"低\" value=\"low\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitInterrupt\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Interrupt',\r\n  data() {\r\n    return {\r\n      interruptList: [],\r\n      dialogVisible: false,\r\n      interruptForm: {\r\n        type: 'hardware',\r\n        priority: 'medium'\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    triggerInterrupt() {\r\n      this.dialogVisible = true\r\n    },\r\n    handleInterrupt() {\r\n      this.$message.success('执行中断处理')\r\n    },\r\n    handleInterruptItem(row) {\r\n      this.$confirm('确认处理该中断?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        const interrupt = this.interruptList.find(i => i.id === row.id)\r\n        if (interrupt) {\r\n          interrupt.status = '已处理'\r\n          interrupt.handleTime = new Date().toLocaleString()\r\n          this.$message.success('中断处理成功')\r\n        }\r\n      }).catch(() => {})\r\n    },\r\n    submitInterrupt() {\r\n      const newInterrupt = {\r\n        id: this.interruptList.length + 1,\r\n        type: this.interruptForm.type,\r\n        priority: this.interruptForm.priority,\r\n        status: '待处理',\r\n        createTime: new Date().toLocaleString(),\r\n        handleTime: null\r\n      }\r\n      this.interruptList.push(newInterrupt)\r\n      this.dialogVisible = false\r\n      this.$message.success('中断触发成功')\r\n    },\r\n    getStatusType(status) {\r\n      switch (status) {\r\n        case '待处理':\r\n          return 'warning'\r\n        case '已处理':\r\n          return 'success'\r\n        default:\r\n          return 'info'\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.interrupt-container {\r\n  padding: 20px;\r\n}\r\n\r\n.operation-buttons {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.operation-buttons .el-button {\r\n  margin-right: 10px;\r\n}\r\n</style> "],"mappings":"AAiEA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,aAAA;MACAC,aAAA;MACAC,aAAA;QACAC,IAAA;QACAC,QAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,iBAAA;MACA,KAAAL,aAAA;IACA;IACAM,gBAAA;MACA,KAAAC,QAAA,CAAAC,OAAA;IACA;IACAC,oBAAAC,GAAA;MACA,KAAAC,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAX,IAAA;MACA,GAAAY,IAAA;QACA,MAAAC,SAAA,QAAAhB,aAAA,CAAAiB,IAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,EAAA,KAAAR,GAAA,CAAAQ,EAAA;QACA,IAAAH,SAAA;UACAA,SAAA,CAAAI,MAAA;UACAJ,SAAA,CAAAK,UAAA,OAAAC,IAAA,GAAAC,cAAA;UACA,KAAAf,QAAA,CAAAC,OAAA;QACA;MACA,GAAAe,KAAA;IACA;IACAC,gBAAA;MACA,MAAAC,YAAA;QACAP,EAAA,OAAAnB,aAAA,CAAA2B,MAAA;QACAxB,IAAA,OAAAD,aAAA,CAAAC,IAAA;QACAC,QAAA,OAAAF,aAAA,CAAAE,QAAA;QACAgB,MAAA;QACAQ,UAAA,MAAAN,IAAA,GAAAC,cAAA;QACAF,UAAA;MACA;MACA,KAAArB,aAAA,CAAA6B,IAAA,CAAAH,YAAA;MACA,KAAAzB,aAAA;MACA,KAAAO,QAAA,CAAAC,OAAA;IACA;IACAqB,cAAAV,MAAA;MACA,QAAAA,MAAA;QACA;UACA;QACA;UACA;QACA;UACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}