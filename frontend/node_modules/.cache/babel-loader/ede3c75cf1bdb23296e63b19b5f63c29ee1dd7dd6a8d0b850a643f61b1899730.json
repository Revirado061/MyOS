{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    isRunning: false,\n    currentTime: '00:00:00',\n    seconds: 0,\n    timer: null\n  },\n  mutations: {\n    SET_RUNNING(state, isRunning) {\n      state.isRunning = isRunning;\n    },\n    SET_CURRENT_TIME(state, time) {\n      state.currentTime = time;\n    },\n    SET_SECONDS(state, seconds) {\n      state.seconds = seconds;\n    },\n    SET_TIMER(state, timer) {\n      state.timer = timer;\n    }\n  },\n  actions: {\n    startClock({\n      commit,\n      state,\n      dispatch\n    }) {\n      commit('SET_RUNNING', true);\n      const timer = setInterval(() => {\n        commit('SET_SECONDS', state.seconds + 1);\n        dispatch('updateDisplay');\n      }, 1000);\n      commit('SET_TIMER', timer);\n    },\n    pauseClock({\n      commit,\n      state\n    }) {\n      commit('SET_RUNNING', false);\n      if (state.timer) {\n        clearInterval(state.timer);\n        commit('SET_TIMER', null);\n      }\n    },\n    updateDisplay({\n      commit,\n      state\n    }) {\n      const hours = Math.floor(state.seconds / 3600);\n      const minutes = Math.floor(state.seconds % 3600 / 60);\n      const secs = state.seconds % 60;\n      const time = `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;\n      commit('SET_CURRENT_TIME', time);\n    }\n  },\n  getters: {\n    isClockRunning: state => state.isRunning,\n    currentTime: state => state.currentTime\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","use","Store","state","isRunning","currentTime","seconds","timer","mutations","SET_RUNNING","SET_CURRENT_TIME","time","SET_SECONDS","SET_TIMER","actions","startClock","commit","dispatch","setInterval","pauseClock","clearInterval","updateDisplay","hours","Math","floor","minutes","secs","String","padStart","getters","isClockRunning","modules"],"sources":["D:/git_project/MyOS/frontend/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    isRunning: false,\n    currentTime: '00:00:00',\n    seconds: 0,\n    timer: null\n  },\n  mutations: {\n    SET_RUNNING(state, isRunning) {\n      state.isRunning = isRunning\n    },\n    SET_CURRENT_TIME(state, time) {\n      state.currentTime = time\n    },\n    SET_SECONDS(state, seconds) {\n      state.seconds = seconds\n    },\n    SET_TIMER(state, timer) {\n      state.timer = timer\n    }\n  },\n  actions: {\n    startClock({ commit, state, dispatch }) {\n      commit('SET_RUNNING', true)\n      const timer = setInterval(() => {\n        commit('SET_SECONDS', state.seconds + 1)\n        dispatch('updateDisplay')\n      }, 1000)\n      commit('SET_TIMER', timer)\n    },\n    pauseClock({ commit, state }) {\n      commit('SET_RUNNING', false)\n      if (state.timer) {\n        clearInterval(state.timer)\n        commit('SET_TIMER', null)\n      }\n    },\n    updateDisplay({ commit, state }) {\n      const hours = Math.floor(state.seconds / 3600)\n      const minutes = Math.floor((state.seconds % 3600) / 60)\n      const secs = state.seconds % 60\n      const time = `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(secs).padStart(2, '0')}`\n      commit('SET_CURRENT_TIME', time)\n    }\n  },\n  getters: {\n    isClockRunning: state => state.isRunning,\n    currentTime: state => state.currentTime\n  },\n  modules: {\n  }\n}) "],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AAEvBD,GAAG,CAACE,GAAG,CAACD,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACE,KAAK,CAAC;EAC5BC,KAAK,EAAE;IACLC,SAAS,EAAE,KAAK;IAChBC,WAAW,EAAE,UAAU;IACvBC,OAAO,EAAE,CAAC;IACVC,KAAK,EAAE;EACT,CAAC;EACDC,SAAS,EAAE;IACTC,WAAWA,CAACN,KAAK,EAAEC,SAAS,EAAE;MAC5BD,KAAK,CAACC,SAAS,GAAGA,SAAS;IAC7B,CAAC;IACDM,gBAAgBA,CAACP,KAAK,EAAEQ,IAAI,EAAE;MAC5BR,KAAK,CAACE,WAAW,GAAGM,IAAI;IAC1B,CAAC;IACDC,WAAWA,CAACT,KAAK,EAAEG,OAAO,EAAE;MAC1BH,KAAK,CAACG,OAAO,GAAGA,OAAO;IACzB,CAAC;IACDO,SAASA,CAACV,KAAK,EAAEI,KAAK,EAAE;MACtBJ,KAAK,CAACI,KAAK,GAAGA,KAAK;IACrB;EACF,CAAC;EACDO,OAAO,EAAE;IACPC,UAAUA,CAAC;MAAEC,MAAM;MAAEb,KAAK;MAAEc;IAAS,CAAC,EAAE;MACtCD,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC;MAC3B,MAAMT,KAAK,GAAGW,WAAW,CAAC,MAAM;QAC9BF,MAAM,CAAC,aAAa,EAAEb,KAAK,CAACG,OAAO,GAAG,CAAC,CAAC;QACxCW,QAAQ,CAAC,eAAe,CAAC;MAC3B,CAAC,EAAE,IAAI,CAAC;MACRD,MAAM,CAAC,WAAW,EAAET,KAAK,CAAC;IAC5B,CAAC;IACDY,UAAUA,CAAC;MAAEH,MAAM;MAAEb;IAAM,CAAC,EAAE;MAC5Ba,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC;MAC5B,IAAIb,KAAK,CAACI,KAAK,EAAE;QACfa,aAAa,CAACjB,KAAK,CAACI,KAAK,CAAC;QAC1BS,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC;MAC3B;IACF,CAAC;IACDK,aAAaA,CAAC;MAAEL,MAAM;MAAEb;IAAM,CAAC,EAAE;MAC/B,MAAMmB,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACrB,KAAK,CAACG,OAAO,GAAG,IAAI,CAAC;MAC9C,MAAMmB,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAErB,KAAK,CAACG,OAAO,GAAG,IAAI,GAAI,EAAE,CAAC;MACvD,MAAMoB,IAAI,GAAGvB,KAAK,CAACG,OAAO,GAAG,EAAE;MAC/B,MAAMK,IAAI,GAAG,GAAGgB,MAAM,CAACL,KAAK,CAAC,CAACM,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAID,MAAM,CAACF,OAAO,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAID,MAAM,CAACD,IAAI,CAAC,CAACE,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;MACrHZ,MAAM,CAAC,kBAAkB,EAAEL,IAAI,CAAC;IAClC;EACF,CAAC;EACDkB,OAAO,EAAE;IACPC,cAAc,EAAE3B,KAAK,IAAIA,KAAK,CAACC,SAAS;IACxCC,WAAW,EAAEF,KAAK,IAAIA,KAAK,CAACE;EAC9B,CAAC;EACD0B,OAAO,EAAE,CACT;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}