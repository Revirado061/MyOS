{"ast":null,"code":"import axios from 'axios';\n\n// 创建axios实例\nconst service = axios.create({\n  baseURL: 'http://localhost:8083',\n  // API的基础URL\n  timeout: 5000 // 请求超时时间\n});\n\n// 请求拦截器\nservice.interceptors.request.use(config => {\n  return config;\n}, error => {\n  console.error('请求错误：', error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  console.error('响应错误：', error);\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","service","create","baseURL","timeout","interceptors","request","use","config","error","console","Promise","reject","response","data"],"sources":["D:/git_project/MyOS_new/frontend/src/api/config.js"],"sourcesContent":["import axios from 'axios'\r\n\r\n// 创建axios实例\r\nconst service = axios.create({\r\n  baseURL: 'http://localhost:8083', // API的基础URL\r\n  timeout: 5000 // 请求超时时间\r\n})\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(\r\n  config => {\r\n    return config\r\n  },\r\n  error => {\r\n    console.error('请求错误：', error)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    return response.data\r\n  },\r\n  error => {\r\n    console.error('响应错误：', error)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC3BC,OAAO,EAAE,uBAAuB;EAAE;EAClCC,OAAO,EAAE,IAAI,CAAC;AAChB,CAAC,CAAC;;AAEF;AACAH,OAAO,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAI;EACR,OAAOA,MAAM;AACf,CAAC,EACDC,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;EAC7B,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAR,OAAO,CAACI,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC/BM,QAAQ,IAAI;EACV,OAAOA,QAAQ,CAACC,IAAI;AACtB,CAAC,EACDL,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;EAC7B,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeR,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}