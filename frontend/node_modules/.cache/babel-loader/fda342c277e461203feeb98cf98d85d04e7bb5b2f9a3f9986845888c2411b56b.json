{"ast":null,"code":"import SystemClock from './components/SystemClock.vue';\nimport ProcessManagement from './components/ProcessManagement.vue';\nimport MemoryManagement from './components/MemoryManagement.vue';\nimport FileSystem from './components/FileSystem.vue';\nimport DeviceManagement from './components/DeviceManagement.vue';\nexport default {\n  name: 'App',\n  components: {\n    SystemClock,\n    ProcessManagement,\n    MemoryManagement,\n    FileSystem,\n    DeviceManagement\n  },\n  data() {\n    return {\n      activeTab: 'process',\n      scale: 0.9 // 默认缩放比例\n    };\n  },\n  mounted() {\n    // 监听窗口大小变化，自动调整缩放比例\n    window.addEventListener('resize', this.adjustScale);\n    this.adjustScale();\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.adjustScale);\n  },\n  methods: {\n    adjustScale() {\n      // 根据窗口大小调整缩放比例\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n\n      // 根据窗口大小动态计算缩放比例\n      if (width < 1600) {\n        this.scale = 0.85;\n      } else if (width < 1920) {\n        this.scale = 0.9;\n      } else {\n        this.scale = 0.95;\n      }\n    }\n  }\n};","map":{"version":3,"names":["SystemClock","ProcessManagement","MemoryManagement","FileSystem","DeviceManagement","name","components","data","activeTab","scale","mounted","window","addEventListener","adjustScale","beforeDestroy","removeEventListener","methods","width","innerWidth","height","innerHeight"],"sources":["src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <el-tabs v-model=\"activeTab\" type=\"border-card\" class=\"main-tabs\">\n      <el-tab-pane label=\"进程与内存管理\" name=\"process\">\n        <div class=\"tab-content\" :style=\"{ transform: `scale(${scale})`, transformOrigin: 'top left' }\">\n          <system-clock></system-clock>\n          <div class=\"management-container\">\n            <process-management class=\"left-panel\"></process-management>\n            <memory-management class=\"right-panel\"></memory-management>\n          </div>\n        </div>\n      </el-tab-pane>\n      \n      <el-tab-pane label=\"文件系统\" name=\"file\">\n        <div class=\"tab-content\" :style=\"{ transform: `scale(${scale})`, transformOrigin: 'top left' }\">\n          <system-clock></system-clock>\n          <file-system></file-system>\n        </div>\n      </el-tab-pane>\n      \n      <el-tab-pane label=\"设备与中断\" name=\"device\">\n        <div class=\"tab-content\" :style=\"{ transform: `scale(${scale})`, transformOrigin: 'top left' }\">\n          <system-clock></system-clock>\n          <device-management></device-management>\n        </div>\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n\n<script>\nimport SystemClock from './components/SystemClock.vue'\nimport ProcessManagement from './components/ProcessManagement.vue'\nimport MemoryManagement from './components/MemoryManagement.vue'\nimport FileSystem from './components/FileSystem.vue'\nimport DeviceManagement from './components/DeviceManagement.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    SystemClock,\n    ProcessManagement,\n    MemoryManagement,\n    FileSystem,\n    DeviceManagement\n  },\n  data() {\n    return {\n      activeTab: 'process',\n      scale: 0.9  // 默认缩放比例\n    }\n  },\n  mounted() {\n    // 监听窗口大小变化，自动调整缩放比例\n    window.addEventListener('resize', this.adjustScale)\n    this.adjustScale()\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.adjustScale)\n  },\n  methods: {\n    adjustScale() {\n      // 根据窗口大小调整缩放比例\n      const width = window.innerWidth\n      const height = window.innerHeight\n      \n      // 根据窗口大小动态计算缩放比例\n      if (width < 1600) {\n        this.scale = 0.85\n      } else if (width < 1920) {\n        this.scale = 0.9\n      } else {\n        this.scale = 0.95\n      }\n    }\n  }\n}\n</script>\n\n<style>\nhtml, body {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n  overflow: hidden;\n}\n\n#app {\n  font-family: 'Microsoft YaHei', Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  height: 100vh;\n  background-color: #f5f7fa;\n  display: flex;\n  flex-direction: column;\n}\n\n.main-tabs {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  margin: 0 !important;\n}\n\n.main-tabs .el-tabs__content {\n  flex: 1;\n  overflow: hidden;\n  padding: 0;\n}\n\n.tab-content {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  width: calc(100% / 0.9); /* 补偿缩放后的宽度 */\n}\n\n.management-container {\n  flex: 1;\n  display: flex;\n  gap: 20px;\n  overflow: hidden;\n}\n\n.left-panel, .right-panel {\n  flex: 1;\n  overflow: auto;\n}\n\n/* 自定义滚动条样式 */\n::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n}\n\n::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 3px;\n}\n\n::-webkit-scrollbar-thumb {\n  background: #c1c1c1;\n  border-radius: 3px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: #a8a8a8;\n}\n</style> "],"mappings":"AA+BA,OAAAA,WAAA;AACA,OAAAC,iBAAA;AACA,OAAAC,gBAAA;AACA,OAAAC,UAAA;AACA,OAAAC,gBAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAN,WAAA;IACAC,iBAAA;IACAC,gBAAA;IACAC,UAAA;IACAC;EACA;EACAG,KAAA;IACA;MACAC,SAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA;IACAC,MAAA,CAAAC,gBAAA,gBAAAC,WAAA;IACA,KAAAA,WAAA;EACA;EACAC,cAAA;IACAH,MAAA,CAAAI,mBAAA,gBAAAF,WAAA;EACA;EACAG,OAAA;IACAH,YAAA;MACA;MACA,MAAAI,KAAA,GAAAN,MAAA,CAAAO,UAAA;MACA,MAAAC,MAAA,GAAAR,MAAA,CAAAS,WAAA;;MAEA;MACA,IAAAH,KAAA;QACA,KAAAR,KAAA;MACA,WAAAQ,KAAA;QACA,KAAAR,KAAA;MACA;QACA,KAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}