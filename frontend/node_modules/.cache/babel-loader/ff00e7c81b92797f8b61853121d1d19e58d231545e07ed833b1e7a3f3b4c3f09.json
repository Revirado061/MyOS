{"ast":null,"code":"export default {\n  name: 'Process',\n  data() {\n    return {\n      processList: [],\n      dialogVisible: false,\n      processForm: {\n        name: '',\n        priority: 'medium',\n        memory: 100\n      }\n    };\n  },\n  methods: {\n    createProcess() {\n      this.dialogVisible = true;\n    },\n    scheduleProcess() {\n      this.$message.success('执行进程调度');\n    },\n    blockProcess() {\n      this.$message.warning('执行进程阻塞');\n    },\n    wakeupProcess() {\n      this.$message.info('执行进程唤醒');\n    },\n    synchronizeProcess() {\n      this.$message.success('执行进程同步');\n    },\n    handleEdit(row) {\n      console.log('编辑进程', row);\n    },\n    handleDelete(row) {\n      this.$confirm('确认删除该进程?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$message.success('删除成功');\n      }).catch(() => {});\n    },\n    submitProcess() {\n      const newProcess = {\n        pid: this.processList.length + 1,\n        name: this.processForm.name,\n        status: '就绪',\n        priority: this.processForm.priority,\n        memory: this.processForm.memory + 'MB',\n        createTime: new Date().toLocaleString()\n      };\n      this.processList.push(newProcess);\n      this.dialogVisible = false;\n      this.$message.success('创建进程成功');\n    }\n  }\n};","map":{"version":3,"names":["name","data","processList","dialogVisible","processForm","priority","memory","methods","createProcess","scheduleProcess","$message","success","blockProcess","warning","wakeupProcess","info","synchronizeProcess","handleEdit","row","console","log","handleDelete","$confirm","confirmButtonText","cancelButtonText","type","then","catch","submitProcess","newProcess","pid","length","status","createTime","Date","toLocaleString","push"],"sources":["src/views/Process.vue"],"sourcesContent":["<template>\n  <div class=\"process-container\">\n    <h2>进程管理</h2>\n    \n    <!-- 进程操作按钮 -->\n    <div class=\"operation-buttons\">\n      <el-button type=\"primary\" @click=\"createProcess\">创建进程</el-button>\n      <el-button type=\"success\" @click=\"scheduleProcess\">进程调度</el-button>\n      <el-button type=\"warning\" @click=\"blockProcess\">进程阻塞</el-button>\n      <el-button type=\"info\" @click=\"wakeupProcess\">进程唤醒</el-button>\n      <el-button type=\"danger\" @click=\"synchronizeProcess\">进程同步</el-button>\n    </div>\n\n    <!-- 进程列表 -->\n    <el-table :data=\"processList\" style=\"width: 100%; margin-top: 20px\">\n      <el-table-column prop=\"pid\" label=\"进程ID\" width=\"100\"></el-table-column>\n      <el-table-column prop=\"name\" label=\"进程名称\" width=\"150\"></el-table-column>\n      <el-table-column prop=\"status\" label=\"状态\" width=\"120\"></el-table-column>\n      <el-table-column prop=\"priority\" label=\"优先级\" width=\"100\"></el-table-column>\n      <el-table-column prop=\"memory\" label=\"内存占用\" width=\"120\"></el-table-column>\n      <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"180\"></el-table-column>\n      <el-table-column label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n          <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 创建进程对话框 -->\n    <el-dialog title=\"创建新进程\" :visible.sync=\"dialogVisible\" width=\"30%\">\n      <el-form :model=\"processForm\" label-width=\"100px\">\n        <el-form-item label=\"进程名称\">\n          <el-input v-model=\"processForm.name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"优先级\">\n          <el-select v-model=\"processForm.priority\" placeholder=\"请选择优先级\">\n            <el-option label=\"高\" value=\"high\"></el-option>\n            <el-option label=\"中\" value=\"medium\"></el-option>\n            <el-option label=\"低\" value=\"low\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"内存需求\">\n          <el-input-number v-model=\"processForm.memory\" :min=\"1\" :max=\"1000\"></el-input-number>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"submitProcess\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Process',\n  data() {\n    return {\n      processList: [],\n      dialogVisible: false,\n      processForm: {\n        name: '',\n        priority: 'medium',\n        memory: 100\n      }\n    }\n  },\n  methods: {\n    createProcess() {\n      this.dialogVisible = true\n    },\n    scheduleProcess() {\n      this.$message.success('执行进程调度')\n    },\n    blockProcess() {\n      this.$message.warning('执行进程阻塞')\n    },\n    wakeupProcess() {\n      this.$message.info('执行进程唤醒')\n    },\n    synchronizeProcess() {\n      this.$message.success('执行进程同步')\n    },\n    handleEdit(row) {\n      console.log('编辑进程', row)\n    },\n    handleDelete(row) {\n      this.$confirm('确认删除该进程?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$message.success('删除成功')\n      }).catch(() => {})\n    },\n    submitProcess() {\n      const newProcess = {\n        pid: this.processList.length + 1,\n        name: this.processForm.name,\n        status: '就绪',\n        priority: this.processForm.priority,\n        memory: this.processForm.memory + 'MB',\n        createTime: new Date().toLocaleString()\n      }\n      this.processList.push(newProcess)\n      this.dialogVisible = false\n      this.$message.success('创建进程成功')\n    }\n  }\n}\n</script>\n\n<style scoped>\n.process-container {\n  padding: 20px;\n}\n\n.operation-buttons {\n  margin-bottom: 20px;\n}\n\n.operation-buttons .el-button {\n  margin-right: 10px;\n}\n</style> "],"mappings":"AAuDA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;MACAC,aAAA;MACAC,WAAA;QACAJ,IAAA;QACAK,QAAA;QACAC,MAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,cAAA;MACA,KAAAL,aAAA;IACA;IACAM,gBAAA;MACA,KAAAC,QAAA,CAAAC,OAAA;IACA;IACAC,aAAA;MACA,KAAAF,QAAA,CAAAG,OAAA;IACA;IACAC,cAAA;MACA,KAAAJ,QAAA,CAAAK,IAAA;IACA;IACAC,mBAAA;MACA,KAAAN,QAAA,CAAAC,OAAA;IACA;IACAM,WAAAC,GAAA;MACAC,OAAA,CAAAC,GAAA,SAAAF,GAAA;IACA;IACAG,aAAAH,GAAA;MACA,KAAAI,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAC,IAAA;QACA,KAAAhB,QAAA,CAAAC,OAAA;MACA,GAAAgB,KAAA;IACA;IACAC,cAAA;MACA,MAAAC,UAAA;QACAC,GAAA,OAAA5B,WAAA,CAAA6B,MAAA;QACA/B,IAAA,OAAAI,WAAA,CAAAJ,IAAA;QACAgC,MAAA;QACA3B,QAAA,OAAAD,WAAA,CAAAC,QAAA;QACAC,MAAA,OAAAF,WAAA,CAAAE,MAAA;QACA2B,UAAA,MAAAC,IAAA,GAAAC,cAAA;MACA;MACA,KAAAjC,WAAA,CAAAkC,IAAA,CAAAP,UAAA;MACA,KAAA1B,aAAA;MACA,KAAAO,QAAA,CAAAC,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}