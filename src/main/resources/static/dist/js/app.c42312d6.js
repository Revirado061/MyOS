(()=>{"use strict";var e={1496:(e,t,s)=>{var r=s(5471),i=function(){var e=this,t=e._self._c;return t("div",{attrs:{id:"app"}},[t("el-tabs",{attrs:{type:"border-card"},model:{value:e.activeTab,callback:function(t){e.activeTab=t},expression:"activeTab"}},[t("el-tab-pane",{attrs:{label:"进程、内存、设备、中断管理",name:"process"}},[t("div",{staticClass:"tab-content"},[t("system-clock"),t("div",{staticClass:"management-container"},[t("process-management",{staticClass:"left-panel"}),t("memory-management",{staticClass:"right-panel"})],1)],1)]),t("el-tab-pane",{attrs:{label:"文件系统",name:"file"}},[t("div",{staticClass:"tab-content"},[t("system-clock"),t("file-system")],1)])],1)],1)},a=[],l=function(){var e=this,t=e._self._c;return t("div",{staticClass:"system-clock"},[t("span",{staticClass:"clock-display"},[e._v(e._s(e.formatTime(e.currentTime))+" / "+e._s(e.currentTime))])])},o=[],n=s(2505),c=s.n(n);const u=c().create({baseURL:"http://localhost:8080",timeout:5e3});u.interceptors.request.use((e=>e),(e=>(console.error("请求错误：",e),Promise.reject(e)))),u.interceptors.response.use((e=>e.data),(e=>(console.error("响应错误：",e),Promise.reject(e))));const m=u;function h(){return m({url:"/timer/current",method:"get"})}const d={name:"SystemClock",data(){return{currentTime:0,timer:null}},methods:{formatTime(e){const t=Math.floor(e/3600),s=Math.floor(e%3600/60),r=e%60;return`${String(t).padStart(2,"0")}:${String(s).padStart(2,"0")}:${String(r).padStart(2,"0")}`},async updateTime(){try{const e=await h();this.currentTime=e.currentTime}catch(e){console.error("获取时间失败:",e)}},startTimer(){this.updateTime(),this.timer=setInterval(this.updateTime,1e3)},clearTimer(){this.timer&&(clearInterval(this.timer),this.timer=null)}},created(){this.startTimer()},beforeDestroy(){this.clearTimer()}},p=d;var g=s(1656),y=(0,g.A)(p,l,o,!1,null,"b98e2ed4",null);const f=y.exports;var v=function(){var e=this,t=e._self._c;return t("div",{staticClass:"process-management"},[t("div",{staticClass:"process-control"},[t("el-form",{staticClass:"input-form",attrs:{model:e.processForm,"label-width":"80px",inline:""}},[t("el-form-item",{attrs:{label:"进程名称"}},[t("el-input",{attrs:{placeholder:"请输入进程名称"},model:{value:e.processForm.name,callback:function(t){e.$set(e.processForm,"name",t)},expression:"processForm.name"}})],1),t("el-form-item",{attrs:{label:"优先级"}},[t("el-select",{attrs:{placeholder:"请选择"},model:{value:e.processForm.priority,callback:function(t){e.$set(e.processForm,"priority",t)},expression:"processForm.priority"}},[t("el-option",{attrs:{label:"高",value:3}}),t("el-option",{attrs:{label:"中",value:2}}),t("el-option",{attrs:{label:"低",value:1}})],1)],1),t("el-form-item",{attrs:{label:"内存大小"}},[t("el-input-number",{attrs:{min:1,max:1024,step:1},model:{value:e.processForm.memorySize,callback:function(t){e.$set(e.processForm,"memorySize",t)},expression:"processForm.memorySize"}}),t("span",{staticClass:"unit"},[e._v("MB")])],1),t("el-form-item",[t("el-button",{attrs:{type:"primary"},on:{click:e.createProcess}},[e._v("创建进程")])],1)],1)],1),t("div",{staticClass:"process-queues"},[t("div",{staticClass:"queue-container"},[t("h3",[e._v("就绪队列")]),t("div",{staticClass:"queue ready-queue"},e._l(e.readyQueue,(function(s){return t("el-tag",{key:s.id,staticClass:"process-tag"},[t("div",{staticClass:"process-info"},[t("span",[e._v(e._s(s.name))]),t("el-tag",{attrs:{size:"small",type:e.getPriorityType(s.priority)}},[e._v("P"+e._s(s.priority))]),t("el-tag",{attrs:{size:"small",type:"info"}},[e._v(e._s(s.memorySize)+"MB")])],1)])})),1)]),t("div",{staticClass:"queue-container"},[t("h3",[e._v("运行队列")]),t("div",{staticClass:"queue running-queue"},e._l(e.runningQueue,(function(s){return t("el-tag",{key:s.id,staticClass:"process-tag",attrs:{type:"success"}},[t("div",{staticClass:"process-info"},[t("span",[e._v(e._s(s.name))]),t("el-tag",{attrs:{size:"small",type:e.getPriorityType(s.priority)}},[e._v("P"+e._s(s.priority))]),t("el-tag",{attrs:{size:"small",type:"info"}},[e._v(e._s(s.memorySize)+"MB")])],1)])})),1)]),t("div",{staticClass:"queue-container"},[t("h3",[e._v("阻塞队列")]),t("div",{staticClass:"queue blocked-queue"},e._l(e.blockedQueue,(function(s){return t("el-tag",{key:s.id,staticClass:"process-tag",attrs:{type:"warning"}},[t("div",{staticClass:"process-info"},[t("span",[e._v(e._s(s.name))]),t("el-tag",{attrs:{size:"small",type:e.getPriorityType(s.priority)}},[e._v("P"+e._s(s.priority))]),t("el-tag",{attrs:{size:"small",type:"info"}},[e._v(e._s(s.memorySize)+"MB")])],1)])})),1)]),t("div",{staticClass:"queue-container"},[t("h3",[e._v("终止队列")]),t("div",{staticClass:"queue terminated-queue"},e._l(e.terminatedQueue,(function(s){return t("el-tag",{key:s.id,staticClass:"process-tag",attrs:{type:"info"}},[t("div",{staticClass:"process-info"},[t("span",[e._v(e._s(s.name))]),t("el-tag",{attrs:{size:"small",type:e.getPriorityType(s.priority)}},[e._v("P"+e._s(s.priority))]),t("el-tag",{attrs:{size:"small",type:"info"}},[e._v(e._s(s.memorySize)+"MB")])],1)])})),1)])]),t("div",{staticClass:"process-list"},[t("div",{staticClass:"process-list-header"},[t("h3",[e._v("进程列表")]),t("div",{staticClass:"scheduling-algorithm"},[t("span",{staticClass:"label"},[e._v("调度算法：")]),t("el-select",{attrs:{size:"small",placeholder:"请选择调度算法"},on:{change:e.handleSchedulingAlgorithmChange},model:{value:e.schedulingAlgorithm,callback:function(t){e.schedulingAlgorithm=t},expression:"schedulingAlgorithm"}},e._l(e.schedulingOptions,(function(e){return t("el-option",{key:e.value,attrs:{label:e.label,value:e.value}})})),1)],1)]),t("el-table",{staticStyle:{width:"100%"},attrs:{data:e.allProcesses,border:"",height:"280"}},[t("el-table-column",{attrs:{prop:"id",label:"进程ID",width:"100",align:"center",sortable:""}}),t("el-table-column",{attrs:{prop:"name",label:"进程名称",width:"100",align:"center"}}),t("el-table-column",{attrs:{prop:"priority",label:"优先级",width:"80",align:"center",filters:[{text:"高",value:3},{text:"中",value:2},{text:"低",value:1}],"filter-method":e.filterPriority,"filter-placement":"bottom"},scopedSlots:e._u([{key:"default",fn:function(s){return[t("el-tag",{attrs:{type:e.getPriorityType(s.row.priority)}},[e._v(" P"+e._s(s.row.priority)+" ")])]}}])}),t("el-table-column",{attrs:{prop:"memorySize",label:"内存大小",width:"120",align:"center"},scopedSlots:e._u([{key:"default",fn:function(t){return[e._v(" "+e._s(t.row.memorySize)+"MB ")]}}])}),t("el-table-column",{attrs:{prop:"state",label:"状态",width:"120",align:"center",filters:[{text:"就绪",value:"READY"},{text:"运行中",value:"RUNNING"},{text:"阻塞",value:"BLOCKED"},{text:"已终止",value:"TERMINATED"}],"filter-method":e.filterState,"filter-placement":"bottom"},scopedSlots:e._u([{key:"default",fn:function(s){return[t("el-tag",{attrs:{type:e.getStateType(s.row.state)}},[e._v(" "+e._s(e.getStateText(s.row.state))+" ")])]}}])}),t("el-table-column",{attrs:{prop:"createTime",label:"创建时间",width:"180",align:"center"},scopedSlots:e._u([{key:"default",fn:function(t){return[e._v(" "+e._s(e.formatTime(t.row.createTime))+" ")]}}])}),t("el-table-column",{attrs:{label:"操作",align:"center",width:"200"},scopedSlots:e._u([{key:"default",fn:function(s){return[t("el-button",{staticStyle:{"margin-left":"10px"},attrs:{size:"mini",type:"primary",disabled:"RUNNING"!==s.row.state},on:{click:function(t){return e.handleEnableDevice(s.row)}}},[e._v("启用设备")]),t("el-button",{attrs:{size:"mini",type:"danger",disabled:"TERMINATED"===s.row.state},on:{click:function(t){return e.handleTerminate(s.row)}}},[e._v("终止")])]}}])})],1)],1),t("el-dialog",{attrs:{title:"设备管理",visible:e.deviceDialogVisible,width:"80%","close-on-click-modal":!1},on:{"update:visible":function(t){e.deviceDialogVisible=t}}},[t("div",{staticClass:"device-control"},[t("el-table",{staticStyle:{width:"100%"},attrs:{data:e.devices}},[t("el-table-column",{attrs:{prop:"id",label:"设备ID",align:"center","header-align":"center"}}),t("el-table-column",{attrs:{prop:"name",label:"设备名称",align:"center","header-align":"center"}}),t("el-table-column",{attrs:{prop:"type",label:"设备类型",align:"center","header-align":"center",filters:[{text:"打印机",value:"PRINTER"},{text:"磁盘",value:"DISK"},{text:"扫描仪",value:"SCANNER"},{text:"网络设备",value:"NETWORK"},{text:"其他",value:"OTHER"}],"filter-method":e.filterDeviceType,"filter-placement":"bottom"}}),t("el-table-column",{attrs:{prop:"status",label:"状态",align:"center","header-align":"center",filters:[{text:"空闲",value:"IDLE"},{text:"忙碌",value:"BUSY"},{text:"等待",value:"WAITING"},{text:"错误",value:"ERROR"}],"filter-method":e.filterDeviceStatus,"filter-placement":"bottom"},scopedSlots:e._u([{key:"default",fn:function(s){return[t("el-tag",{attrs:{type:e.getStatusType(s.row.status)}},[e._v(" "+e._s(e.getDeviceStatusText(s.row.status))+" ")])]}}])}),t("el-table-column",{attrs:{prop:"currentProcessId",label:"当前进程",align:"center","header-align":"center"},scopedSlots:e._u([{key:"default",fn:function(t){return[e._v(" "+e._s(t.row.currentProcessId||"无")+" ")]}}])}),t("el-table-column",{attrs:{prop:"remainingTime",label:"剩余时间",align:"center","header-align":"center"},scopedSlots:e._u([{key:"default",fn:function(t){return[e._v(" "+e._s(t.row.remainingTime||0)+"秒 ")]}}])}),t("el-table-column",{attrs:{label:"操作",width:"180",align:"center","header-align":"center"},scopedSlots:e._u([{key:"default",fn:function(s){return[t("el-button",{attrs:{size:"mini",type:"primary",disabled:"IDLE"!==s.row.status},on:{click:function(t){return e.showAllocateDialog(s.row)}}},[e._v(" 请求 ")]),t("el-button",{attrs:{size:"mini",type:"danger",disabled:"IDLE"===s.row.status},on:{click:function(t){return e.handleReleaseDevice(s.row.id)}}},[e._v(" 释放 ")])]}}])})],1)],1)]),t("el-dialog",{attrs:{title:"分配设备",visible:e.allocateDialogVisible,width:"30%","close-on-click-modal":!1},on:{"update:visible":function(t){e.allocateDialogVisible=t}}},[t("el-form",{attrs:{model:e.allocateForm,"label-width":"100px"}},[t("el-form-item",{attrs:{label:"设备名称"}},[t("span",[e._v(e._s(e.selectedDevice?e.selectedDevice.name:""))])]),t("el-form-item",{attrs:{label:"运行时间"}},[t("el-input-number",{attrs:{min:1,max:60,label:"秒"},model:{value:e.allocateForm.timeout,callback:function(t){e.$set(e.allocateForm,"timeout",t)},expression:"allocateForm.timeout"}}),t("span",{staticClass:"unit",staticStyle:{"margin-left":"10px"}},[e._v("秒")])],1)],1),t("span",{staticClass:"dialog-footer",attrs:{slot:"footer"},slot:"footer"},[t("el-button",{on:{click:function(t){e.allocateDialogVisible=!1}}},[e._v("取 消")]),t("el-button",{attrs:{type:"primary"},on:{click:e.handleAllocate}},[e._v("确 定")])],1)],1)],1)},b=[];const w={createProcess:e=>m.post("/process",e),getAllProcesses:()=>m.get("/process"),getProcessesByState:e=>m.get(`/process/${e}`),getCurrentProcess:()=>m.get("/process/current"),deleteProcess:e=>m.delete(`/process/${e}`),updateProcessState:(e,t)=>m.put(`/process/${e}/state`,{state:t}),terminateProcess:e=>m.post(`/process/${e}/terminate`),updateProcessPriority:(e,t)=>m.put(`/process/${e}/priority`,{priority:t}),getProcessInfo:e=>m.get(`/process/${e}/info`),getProcessStats:()=>m.get("/process/stats"),setSchedulingAlgorithm:e=>m.put(`/process/scheduling-algorithm?algorithm=${e}`),getSchedulingAlgorithm:()=>m.get("/process/scheduling-algorithm"),batchUpdatePriorities:e=>m.put("/process/batch-update-priorities",e)},_={triggerInterrupt:(e,t)=>m.post(`/process/${e}/interrupt?reason=${t}`)};function C(){return m({url:"/device",method:"get"})}function k(e,t,s){return m({url:`/process/${e}/request-device`,method:"post",params:{deviceId:t,timeout:s}})}function S(e,t){return m({url:`/process/${e}/release-device`,method:"post",params:{deviceId:t}})}const D={name:"ProcessManagement",data(){return{processForm:{name:"",priority:2,memorySize:64},schedulingAlgorithm:"",schedulingOptions:[{label:"先到先服务 (FCFS)",value:"FCFS"},{label:"优先级调度 (PRIORITY)",value:"PRIORITY"}],readyQueue:[],runningQueue:[],blockedQueue:[],terminatedQueue:[],allProcesses:[],timer:null,selectedState:"ALL",searchKeyword:"",currentProcessId:null,devices:[],deviceDialogVisible:!1,allocateDialogVisible:!1,selectedDevice:null,allocateForm:{timeout:5}}},computed:{filteredProcesses(){let e=this.allProcesses;if("ALL"!==this.selectedState&&(e=e.filter((e=>e.state===this.selectedState))),this.searchKeyword){const t=this.searchKeyword.toLowerCase();e=e.filter((e=>e.name.toLowerCase().includes(t)))}return e}},async created(){try{const e=await w.getSchedulingAlgorithm();e.success&&(this.schedulingAlgorithm=e.data.algorithm)}catch(e){console.error("获取调度算法失败:",e),this.schedulingAlgorithm="FCFS"}this.fetchProcesses(),this.timer=setInterval(this.fetchProcesses,3e4)},beforeDestroy(){this.timer&&clearInterval(this.timer)},methods:{getPriorityType(e){const t={1:"info",2:"warning",3:"danger"};return t[e]||"info"},getStateType(e){const t={READY:"info",RUNNING:"success",BLOCKED:"warning",TERMINATED:"info"};return t[e]||"info"},getStateText(e){const t={READY:"就绪",RUNNING:"运行中",BLOCKED:"阻塞",TERMINATED:"已终止"};return t[e]||e},formatTime(e){if(!e)return"-";const t=new Date(e);return t.toLocaleString()},async handleTerminate(e){try{const t=await w.terminateProcess(e.id);t.success?(this.$message.success(t.message||`进程 ${e.name} 已终止`),await this.fetchProcesses(),this.runningQueue.some((t=>t.id===e.id))&&(this.runningQueue=[])):this.$message.error(t.message||"终止进程失败")}catch(t){console.error("终止进程错误:",t),this.$message.error("终止进程失败")}},async getProcessesByState(e){try{const t=await w.getProcessesByState(e);return t.data||[]}catch(t){return console.error(`获取${e}状态进程失败:`,t),[]}},async fetchProcesses(){try{const e=await w.getAllProcesses();this.allProcesses=e.data||[],this.readyQueue=await this.getProcessesByState("ready");const t=await w.getCurrentProcess();this.runningQueue=t.data?[t.data]:[],this.blockedQueue=await this.getProcessesByState("waiting"),this.terminatedQueue=await this.getProcessesByState("terminated")}catch(e){console.error("获取进程数据失败:",e),this.$message.error("获取进程数据失败"),this.readyQueue=[],this.runningQueue=[],this.blockedQueue=[],this.terminatedQueue=[],this.allProcesses=[]}},async createProcess(){try{const e=await w.createProcess({name:this.processForm.name,priority:this.processForm.priority,memorySize:this.processForm.memorySize});e.success?(this.$message.success("进程创建成功"),this.processForm.name="",await this.fetchProcesses()):this.$message.error(e.message||"创建进程失败")}catch(e){this.$message.error("创建进程失败，请重试")}},async handleEnableDevice(e){try{this.currentProcessId=e.id,await this.fetchDevices(),this.deviceDialogVisible=!0}catch(t){console.error("获取设备列表失败:",t),this.$message.error("获取设备列表失败")}},async fetchDevices(){try{const e=await C();console.log("response",e),e.message?(this.devices=e.data||[],console.log("devices",e.data)):(this.$message.error(e.message||"获取设备列表失败"),this.devices=[])}catch(e){console.error("获取设备列表失败:",e),this.$message.error("获取设备列表失败"),this.devices=[]}},getStatusType(e){const t={IDLE:"success",BUSY:"warning",ERROR:"danger",WAITING:"info"};return t[e]||"info"},showAllocateDialog(e){this.selectedDevice=e,this.allocateForm.timeout=15,this.allocateDialogVisible=!0},async handleAllocate(){try{if(!this.selectedDevice)return void this.$message.error("未选择设备");const e=await k(this.currentProcessId,this.selectedDevice.id,this.allocateForm.timeout);e.success?(await _.triggerInterrupt(this.currentProcessId,"IO"),await this.fetchProcesses(),this.$message.success("设备分配成功"),this.allocateDialogVisible=!1,await this.fetchDevices()):this.$message.error(e.message||"设备分配失败")}catch(e){console.error("设备分配失败:",e),this.$message.error("设备分配失败")}},async handleReleaseDevice(e){try{const t=await S(this.currentProcessId,e);t.success?(this.$message.success(t.message||"设备释放成功"),await Promise.all([this.fetchDevices(),this.fetchProcesses()])):this.$message.error(t.message||"设备释放失败")}catch(t){console.error("设备释放失败:",t),this.$message.error("设备释放失败")}},handleSearch(){},filterState(e,t){return t.state===e},filterPriority(e,t){return t.priority===e},async handleSchedulingAlgorithmChange(e){console.log("用户选择的调度算法:",e);const t=this.schedulingAlgorithm;try{const s=await w.setSchedulingAlgorithm(e);s?.success?(this.$message.success(s.message||"调度算法设置成功"),this.schedulingAlgorithm=e,await this.fetchProcesses()):(this.$message.error(s.message||"调度算法设置失败"),this.schedulingAlgorithm=t)}catch(s){console.error("设置调度算法失败:",s),this.$message.error("调度算法设置失败，请稍后再试"),this.schedulingAlgorithm=t}},filterDeviceType(e,t){return t.type===e},filterDeviceStatus(e,t){return t.status===e},getDeviceStatusText(e){const t={IDLE:"空闲",BUSY:"忙碌",WAITING:"等待",ERROR:"错误"};return t[e]||e}}},T=D;var P=(0,g.A)(T,v,b,!1,null,"7c58605c",null);const F=P.exports;var I=function(){var e=this,t=e._self._c;return t("div",{staticClass:"memory-management"},[t("div",{staticClass:"memory-info"},[t("div",{staticClass:"info-item"},[e._v("总内存: "+e._s(e.totalMemory)+"MB")]),t("div",{staticClass:"info-item"},[e._v("已用内存: "+e._s(e.usedMemory)+"MB")]),t("div",{staticClass:"info-item"},[e._v("空闲内存: "+e._s(e.freeMemory)+"MB")]),t("div",{staticClass:"memory-usage"},[t("div",{staticClass:"usage-label"},[e._v("内存利用率: "+e._s(e.memoryUsagePercentage)+"%")]),t("el-progress",{attrs:{percentage:e.memoryUsagePercentage,color:e.memoryUsageColor,"stroke-width":15,"show-text":!1}})],1)]),t("div",{staticClass:"memory-blocks"},e._l(e.memoryRows,(function(s,r){return t("div",{key:r,staticClass:"memory-row"},e._l(s,(function(s,r){return t("div",{key:r,staticClass:"memory-block",class:{allocated:"ALLOCATED"===s.status,free:"FREE"===s.status},attrs:{title:e.getBlockTooltip(s)}})})),0)})),0),t("div",{staticClass:"interrupt-handling"},[t("h3",[e._v("中断处理")]),t("div",{directives:[{name:"loading",rawName:"v-loading",value:e.loading,expression:"loading"}],staticClass:"interrupt-list"},[t("el-timeline",e._l(e.interrupts,(function(s){return t("el-timeline-item",{key:s.id,attrs:{type:e.getInterruptType(s.type),timestamp:e.formatTimestamp(s.timestamp)}},[t("div",{staticClass:"interrupt-content"},[t("div",{staticClass:"interrupt-message"},[e._v(e._s(s.message))]),t("div",{staticClass:"interrupt-result"},[e._v(e._s(s.result))])])])})),1)],1)])])},E=[];function $(){return m({url:"/memory/free-size",method:"get"})}function R(){return m({url:"/memory/status",method:"get"})}function x(){return m({url:"/memory/free-blocks",method:"get"})}function M(){return m({url:"/memory/usage",method:"get"})}function A(e){return m({url:"/interrupts/logs",method:"get",params:e})}const z={name:"MemoryManagement",data(){return{totalMemory:1024,usedMemory:0,freeMemory:1024,blockSize:4,memoryRows:[],blocksPerRow:16,updateInterval:null,interrupts:[],timer:null,loading:!1}},computed:{memoryUsagePercentage(){return Math.round(this.usedMemory/this.totalMemory*100)},memoryUsageColor(){const e=this.memoryUsagePercentage;return e<60?"#67C23A":e<80?"#E6A23C":"#F56C6C"}},created(){this.initializeMemory(),this.fetchMemoryData(),this.updateInterval=setInterval(this.fetchMemoryData,1e3),this.fetchInterruptLogs(),this.timer=setInterval((()=>{this.fetchInterruptLogs()}),1e3)},beforeDestroy(){this.updateInterval&&clearInterval(this.updateInterval),this.timer&&clearInterval(this.timer)},methods:{initializeMemory(){const e=Math.ceil(this.totalMemory/this.blockSize),t=Math.ceil(e/this.blocksPerRow);this.memoryRows=Array(t).fill().map((()=>Array(this.blocksPerRow).fill().map((()=>({status:"FREE",processId:null,size:this.blockSize})))))},getBlockTooltip(e){return"ALLOCATED"===e.status?`进程ID: ${e.processId}\n大小: ${e.size}MB`:"空闲块"},allocateMemory(e,t){const s=Math.ceil(t/this.blockSize);let r=0;for(let i of this.memoryRows)for(let a of i)if("FREE"===a.status&&(a.status="ALLOCATED",a.processId=e,r++,r===s))return this.usedMemory+=t,this.freeMemory-=t,!0;return!1},releaseMemory(e){let t=0;for(let s of this.memoryRows)for(let r of s)"ALLOCATED"===r.status&&r.processId===e&&(r.status="FREE",r.processId=null,t+=r.size);this.usedMemory-=t,this.freeMemory+=t},async fetchMemoryData(){try{const e=await $();this.freeMemory=e,this.usedMemory=this.totalMemory-e;const t=await R();this.updateMemoryBlocks(t);await x(),await M()}catch(e){this.$message.error("获取内存数据失败")}},updateMemoryBlocks(e){const t=Math.ceil(this.totalMemory/this.blockSize),s=Math.ceil(t/this.blocksPerRow);this.memoryRows=Array(s).fill().map(((t,s)=>Array(this.blocksPerRow).fill().map(((t,r)=>{const i=s*this.blocksPerRow+r,a=i<e.length?e[i]:0;return{status:0===a?"FREE":"ALLOCATED",processId:0===a?null:a,size:this.blockSize}}))))},getInterruptType(e){const t={CLOCK:"primary",IO:"success",DEVICE:"warning",ERROR:"danger",PROCESS:"info"};return t[e]||"info"},addInterrupt(e,t){const s=new Date,r=`${s.getHours()}:${s.getMinutes()}:${s.getSeconds()}`;this.interrupts.unshift({type:e,message:t,time:r})},async fetchInterruptLogs(){if(!this.loading){this.loading=!0;try{const e=await A();"success"===e.status&&(this.interrupts=e.data.logs)}catch(e){console.error("获取中断日志失败:",e)}finally{this.loading=!1}}},formatTimestamp(e){return new Date(e).toLocaleString()}}},N=z;var O=(0,g.A)(N,I,E,!1,null,"4a076d39",null);const B=O.exports;var L=function(){var e=this,t=e._self._c;return t("div",{staticClass:"file-system"},[t("div",{staticClass:"file-control"},[t("div",{staticStyle:{"margin-bottom":"12px","font-size":"16px"}},[e._v(" 当前目录："+e._s(e.currentPath)+" ")]),t("div",{staticStyle:{"margin-bottom":"12px",display:"flex","align-items":"center"}},[t("span",{staticStyle:{"margin-right":"8px"}},[e._v("切换目录：")]),t("el-input",{staticStyle:{width:"300px","margin-right":"8px"},attrs:{placeholder:"/ .. 目录名称",size:"small"},model:{value:e.changeDirInput,callback:function(t){e.changeDirInput=t},expression:"changeDirInput"}}),t("el-button",{attrs:{type:"primary",size:"small"},on:{click:e.handleChangeDirectory}},[e._v("切换")])],1),t("div",{staticStyle:{"margin-bottom":"12px",display:"flex",gap:"12px"}},[t("el-button",{attrs:{type:"success",size:"small"},on:{click:function(t){e.showCreateDir=!e.showCreateDir}}},[e._v("创建目录")]),t("el-button",{attrs:{type:"primary",size:"small"},on:{click:function(t){e.showCreateFile=!e.showCreateFile}}},[e._v("创建文件")])],1),e.showCreateDir?t("div",{staticStyle:{"margin-bottom":"12px",display:"flex","align-items":"center",gap:"8px"}},[t("span",[e._v("目录名称：")]),t("el-input",{staticStyle:{width:"200px"},attrs:{size:"small"},model:{value:e.createDirName,callback:function(t){e.createDirName=t},expression:"createDirName"}}),t("el-button",{attrs:{type:"success",size:"small"},on:{click:e.handleCreateDirectory}},[e._v("提交")]),t("el-button",{attrs:{size:"small"},on:{click:function(t){e.showCreateDir=!1}}},[e._v("取消")])],1):e._e(),e.showCreateFile?t("div",{staticStyle:{"margin-bottom":"12px",display:"flex","align-items":"center",gap:"8px"}},[t("span",[e._v("文件名称：")]),t("el-input",{staticStyle:{width:"200px"},attrs:{size:"small"},model:{value:e.createFileName,callback:function(t){e.createFileName=t},expression:"createFileName"}}),t("el-button",{attrs:{type:"primary",size:"small"},on:{click:e.handleCreateFile}},[e._v("提交")]),t("el-button",{attrs:{size:"small"},on:{click:function(t){e.showCreateFile=!1}}},[e._v("取消")])],1):e._e(),t("div",{staticClass:"file-tree"},[t("h3",[e._v("文件系统结构")]),t("el-tree",{attrs:{data:e.fileTree,props:e.defaultProps,"default-expand-all":""},on:{"node-click":e.handleNodeClick},scopedSlots:e._u([{key:"default",fn:function({node:s,data:r}){return t("span",{staticClass:"custom-tree-node"},[t("span",[t("i",{class:"directory"===r.type?"el-icon-folder":"el-icon-document"}),e._v(" "+e._s(s.label)+" ")]),t("span",[t("el-button",{attrs:{type:"text",size:"mini"},on:{click:()=>e.deleteNode(s,r)}},[e._v(" 删除 ")])],1)])}}])})],1)]),t("div",{staticClass:"disk-blocks"},[t("h2",[e._v("磁盘空间分配")]),t("div",{staticClass:"disk-info"},[t("div",[e._v("总空间: "+e._s(e.totalSpace)+"MB")]),t("div",[e._v("已用空间: "+e._s(e.usedSpace)+"MB")]),t("div",[e._v("空闲空间: "+e._s(e.freeSpace)+"MB")]),t("div",[e._v("利用率: "+e._s(e.diskUsagePercentage)+"%")]),t("el-progress",{staticStyle:{"margin-top":"2px",width:"500px",height:"30px"},attrs:{percentage:e.diskUsagePercentage,status:e.diskUsageStatus,format:e.diskUsageFormat}})],1),t("div",{staticClass:"disk-blocks-grid"},e._l(e.diskRows,(function(s,r){return t("div",{key:r,staticClass:"disk-row"},e._l(s,(function(s,r){return t("div",{key:r,staticClass:"disk-block",class:{allocated:"ALLOCATED"===s.status,free:"FREE"===s.status},attrs:{title:e.getBlockTooltip(s)}})})),0)})),0),t("div",{staticClass:"file-content-area"},[t("div",{staticClass:"content-header"},[t("h3",[e._v("当前文件: "+e._s(e.currentFile||"未选择文件"))]),t("div",{staticClass:"content-actions"},[t("el-button",{attrs:{type:"primary",size:"small",disabled:!e.currentFile},on:{click:function(t){e.isEditing=!e.isEditing}}},[e._v(" "+e._s(e.isEditing?"保存":"写入文件内容")+" ")]),t("el-button",{attrs:{type:"info",size:"small",disabled:!e.currentFile},on:{click:e.closeCurrentFile}},[e._v(" 关闭文件 ")])],1)]),t("div",{staticClass:"content-body"},[e.isEditing?t("el-input",{attrs:{type:"textarea",rows:10,placeholder:"请输入文件内容"},model:{value:e.fileContent,callback:function(t){e.fileContent=t},expression:"fileContent"}}):t("div",{staticClass:"content-display"},[e._v(" "+e._s(e.fileContent||"暂无文件内容")+" ")])],1)])])])},U=[];const Q=()=>m({url:"/filesystem/current-path",method:"get"}),q=()=>m({url:"/filesystem/tree",method:"get"}),V=e=>m({url:"/filesystem/directory",method:"post",params:{name:e}}),j=e=>m({url:"/filesystem/change-directory",method:"post",params:{path:e}}),G=e=>m({url:"/filesystem/directory",method:"delete",params:{name:e}}),K=e=>m({url:"/filesystem/file",method:"post",params:{name:e}}),Y=e=>m({url:"/filesystem/file/open",method:"post",params:{name:e}}),W=e=>m({url:"/filesystem/file/close",method:"post",params:{name:e}}),H=e=>m({url:"/filesystem/file/content",method:"get",params:{name:e}}),J=(e,t)=>(console.log("传给后端前的内容：",t),m({url:"/filesystem/file/content",method:"post",params:{name:e},data:t,headers:{"Content-Type":"text/plain"}})),X=e=>m({url:"/filesystem/file",method:"delete",params:{name:e}}),Z=()=>m({url:"/filesystem/disk-status",method:"get"}),ee={name:"FileSystem",data(){return{fileForm:{name:"",type:"file",size:1},fileTree:[],defaultProps:{children:"children",label:"name"},totalSpace:8192,usedSpace:0,freeSpace:8192,blockSize:32,diskRows:[],blocksPerRow:32,currentPath:"/",loading:!1,currentFile:null,fileContent:"",isEditing:!1,showCreateDir:!1,createDirName:"",showCreateFile:!1,createFileName:"",writeFileName:"",writeFileContent:"",changeDirInput:"",usagePercentage:0,usedBlocks:0}},created(){this.initializeDisk(),this.fetchFileTree(),this.fetchCurrentPath()},methods:{initializeDisk(){const e=Math.ceil(this.totalSpace/this.blockSize),t=Math.ceil(e/this.blocksPerRow);this.diskRows=Array(t).fill().map((()=>Array(this.blocksPerRow).fill().map((()=>({status:"FREE",fileId:null,size:this.blockSize}))))),this.fetchDiskData()},async fetchDiskData(){const e=await Z();this.usagePercentage=e.status.usagePercentage,this.usedSpace=32*e.status.usedBlocks,this.freeSpace=32*e.status.freeBlocks,this.usedBlocks=e.status.usedBlocks;const t=Math.ceil(this.totalSpace/this.blockSize),s=Math.ceil(t/this.blocksPerRow);this.diskRows=Array(s).fill().map(((e,t)=>Array(this.blocksPerRow).fill().map(((e,s)=>{const r=t*this.blocksPerRow+s;return{status:r<this.usedBlocks?"ALLOCATED":"FREE",fileId:r<this.usedBlocks?`file_${r}`:null,size:this.blockSize}}))))},getBlockTooltip(e){return"ALLOCATED"===e.status?`文件: ${e.fileId}\n大小: ${e.size}MB`:"空闲块"},async fetchFileTree(){try{const e=await q();e.success&&(this.fileTree=[e.tree])}catch(e){this.$message.error("获取文件树失败")}},async fetchCurrentPath(){try{const e=await Q();this.currentPath=e,console.log(this.currentPath)}catch(e){this.$message.error("获取当前路径失败")}},async createFileOrDir(){if(this.fileForm.name)try{"directory"===this.fileForm.type?await V(this.fileForm.name):await K(this.fileForm.name),this.$message.success(("directory"===this.fileForm.type?"目录":"文件")+"创建成功"),this.fileForm.name="",this.fetchFileTree()}catch(e){this.$message.error(("directory"===this.fileForm.type?"目录":"文件")+"创建失败")}else this.$message.warning("请输入名称")},async handleNodeClick(e){if("directory"===e.type)this.currentFile=null,this.fileContent="";else if("file"===e.type)try{await Y(e.name);const t=await H(e.name);if(console.log("后端返回的完整响应:",t),console.log("响应类型:",typeof t),console.log("content类型:",typeof t.content),console.log("content值:",t.content),t.success){this.currentFile=e.name;let s=t.content||"";console.log("处理前的content:",s),s=s.replace(/\0/g,""),s=s.replace(/^"|"$/g,""),this.fileContent=s,console.log("处理后的文件内容:",this.fileContent)}}catch(t){console.error("打开文件错误:",t),this.$message.error("打开文件失败")}},async deleteNode(e,t){try{let e;e="directory"===t.type?await G(t.name):await X(t.name),e.success?(this.$message.success(("directory"===t.type?"目录":"文件")+"删除成功"),this.fetchFileTree(),this.fetchDiskData()):this.$message.error(e.message||("directory"===t.type?"目录":"文件")+"删除失败")}catch(s){this.$message.error(("directory"===t.type?"目录":"文件")+"删除失败")}},async closeCurrentFile(){if(this.currentFile)try{await W(this.currentFile),this.currentFile=null,this.fileContent="",this.isEditing=!1,this.$message.success("文件已关闭")}catch(e){this.$message.error("关闭文件失败")}},async saveFileContent(){if(this.currentFile)try{await J(this.currentFile,this.fileContent),this.isEditing=!1,this.fetchDiskData(),this.$message.success("文件保存成功")}catch(e){this.$message.error("文件保存失败")}},async handleChangeDirectory(){try{console.log("切换目录请求参数:",this.changeDirInput),console.log("切换目录请求参数类型:",typeof this.changeDirInput);const e=await j(String(this.changeDirInput).trim());console.log("切换目录响应:",e),e.success?(this.$message.success("切换目录成功"),this.fetchFileTree(),this.fetchCurrentPath(),this.changeDirInput=""):this.$message.error(e.message||"切换目录失败")}catch(e){console.error("切换目录错误:",e),this.$message.error("切换目录失败")}},async handleCreateDirectory(){try{const e=await V(this.createDirName);e.success?(this.$message.success("创建目录成功"),this.showCreateDir=!1,this.createDirName="",this.fetchFileTree(),this.fetchCurrentPath()):this.$message.error(e.message||"创建目录失败")}catch(e){this.$message.error("创建目录失败")}},async handleCreateFile(){if(this.createFileName)try{const e=await K(this.createFileName);e.success?(this.$message.success("文件创建成功"),this.showCreateFile=!1,this.createFileName="",this.fetchFileTree(),this.fetchDiskData()):this.$message.error(e.message||"创建文件失败")}catch(e){console.error("创建文件错误:",e),this.$message.error("创建文件失败")}else this.$message.warning("请输入文件名称")},async handleWriteContent(){if(this.writeFileName&&this.writeFileContent)try{const e=await J(this.writeFileName,this.writeFileContent);e.success?(this.$message.success("文件内容写入成功"),this.fetchFileTree(),this.fetchDiskData()):this.$message.error(e.message||"写入文件内容失败")}catch(e){console.error("写入文件内容错误:",e),this.$message.error("写入文件内容失败")}else this.$message.warning("文件名称和内容不能为空")},resetWriteContentDialog(){this.writeFileName="",this.writeFileContent=""}},computed:{diskUsagePercentage(){return this.usagePercentage},diskUsageStatus(){const e=this.diskUsagePercentage;return e>=90?"exception":e>=70?"warning":"success"},diskUsageFormat(){return e=>`${e}%`}},watch:{isEditing(e){!e&&this.currentFile&&this.saveFileContent()}}},te=ee;var se=(0,g.A)(te,L,U,!1,null,"e192c1ac",null);const re=se.exports,ie={name:"App",components:{SystemClock:f,ProcessManagement:F,MemoryManagement:B,FileSystem:re},data(){return{activeTab:"process"}}},ae=ie;var le=(0,g.A)(ae,i,a,!1,null,null,null);const oe=le.exports;var ne=s(5353);r["default"].use(ne.Ay);const ce=new ne.Ay.Store({state:{isRunning:!1,currentTime:"00:00:00",seconds:0,timer:null},mutations:{SET_RUNNING(e,t){e.isRunning=t},SET_CURRENT_TIME(e,t){e.currentTime=t},SET_SECONDS(e,t){e.seconds=t},SET_TIMER(e,t){e.timer=t}},actions:{startClock({commit:e,state:t,dispatch:s}){e("SET_RUNNING",!0);const r=setInterval((()=>{e("SET_SECONDS",t.seconds+1),s("updateDisplay")}),1e3);e("SET_TIMER",r)},pauseClock({commit:e,state:t}){e("SET_RUNNING",!1),t.timer&&(clearInterval(t.timer),e("SET_TIMER",null))},updateDisplay({commit:e,state:t}){const s=Math.floor(t.seconds/3600),r=Math.floor(t.seconds%3600/60),i=t.seconds%60,a=`${String(s).padStart(2,"0")}:${String(r).padStart(2,"0")}:${String(i).padStart(2,"0")}`;e("SET_CURRENT_TIME",a)}},getters:{isClockRunning:e=>e.isRunning,currentTime:e=>e.currentTime},modules:{}});var ue=s(1052),me=s.n(ue);r["default"].use(me()),r["default"].config.productionTip=!1,new r["default"]({store:ce,render:e=>e(oe)}).$mount("#app")}},t={};function s(r){var i=t[r];if(void 0!==i)return i.exports;var a=t[r]={id:r,loaded:!1,exports:{}};return e[r](a,a.exports,s),a.loaded=!0,a.exports}s.m=e,(()=>{s.amdO={}})(),(()=>{var e=[];s.O=(t,r,i,a)=>{if(!r){var l=1/0;for(u=0;u<e.length;u++){for(var[r,i,a]=e[u],o=!0,n=0;n<r.length;n++)(!1&a||l>=a)&&Object.keys(s.O).every((e=>s.O[e](r[n])))?r.splice(n--,1):(o=!1,a<l&&(l=a));if(o){e.splice(u--,1);var c=i();void 0!==c&&(t=c)}}return t}a=a||0;for(var u=e.length;u>0&&e[u-1][2]>a;u--)e[u]=e[u-1];e[u]=[r,i,a]}})(),(()=>{s.n=e=>{var t=e&&e.__esModule?()=>e["default"]:()=>e;return s.d(t,{a:t}),t}})(),(()=>{s.d=(e,t)=>{for(var r in t)s.o(t,r)&&!s.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}})(),(()=>{s.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()})(),(()=>{s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)})(),(()=>{s.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}})(),(()=>{s.nmd=e=>(e.paths=[],e.children||(e.children=[]),e)})(),(()=>{var e={524:0};s.O.j=t=>0===e[t];var t=(t,r)=>{var i,a,[l,o,n]=r,c=0;if(l.some((t=>0!==e[t]))){for(i in o)s.o(o,i)&&(s.m[i]=o[i]);if(n)var u=n(s)}for(t&&t(r);c<l.length;c++)a=l[c],s.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return s.O(u)},r=self["webpackChunkmyos_frontend"]=self["webpackChunkmyos_frontend"]||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})();var r=s.O(void 0,[504],(()=>s(1496)));r=s.O(r)})();
//# sourceMappingURL=app.c42312d6.js.map