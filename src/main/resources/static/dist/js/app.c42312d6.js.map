{"version":3,"file":"js/app.c42312d6.js","mappings":"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","sources":["webpack://myos-frontend/./src/App.vue","webpack://myos-frontend/./src/components/SystemClock.vue","webpack://myos-frontend/./src/api/config.js","webpack://myos-frontend/./src/api/clock.js","webpack://myos-frontend/src/components/SystemClock.vue","webpack://myos-frontend/./src/components/SystemClock.vue?75df","webpack://myos-frontend/./src/components/SystemClock.vue?da92","webpack://myos-frontend/./src/components/ProcessManagement.vue","webpack://myos-frontend/./src/api/process_interrupt_device.js","webpack://myos-frontend/./src/api/device.js","webpack://myos-frontend/src/components/ProcessManagement.vue","webpack://myos-frontend/./src/components/ProcessManagement.vue?8bf6","webpack://myos-frontend/./src/components/ProcessManagement.vue?e55b","webpack://myos-frontend/./src/components/MemoryManagement.vue","webpack://myos-frontend/./src/api/memory.js","webpack://myos-frontend/./src/api/interrupt.js","webpack://myos-frontend/src/components/MemoryManagement.vue","webpack://myos-frontend/./src/components/MemoryManagement.vue?f602","webpack://myos-frontend/./src/components/MemoryManagement.vue?36e4","webpack://myos-frontend/./src/components/FileSystem.vue","webpack://myos-frontend/./src/api/file.js","webpack://myos-frontend/src/components/FileSystem.vue","webpack://myos-frontend/./src/components/FileSystem.vue?44de","webpack://myos-frontend/./src/components/FileSystem.vue?68c7","webpack://myos-frontend/src/App.vue","webpack://myos-frontend/./src/App.vue?c036","webpack://myos-frontend/./src/App.vue?0e40","webpack://myos-frontend/./src/store/index.js","webpack://myos-frontend/./src/main.js","webpack://myos-frontend/webpack/bootstrap","webpack://myos-frontend/webpack/runtime/amd options","webpack://myos-frontend/webpack/runtime/chunk loaded","webpack://myos-frontend/webpack/runtime/compat get default export","webpack://myos-frontend/webpack/runtime/define property getters","webpack://myos-frontend/webpack/runtime/global","webpack://myos-frontend/webpack/runtime/hasOwnProperty shorthand","webpack://myos-frontend/webpack/runtime/make namespace object","webpack://myos-frontend/webpack/runtime/node module decorator","webpack://myos-frontend/webpack/runtime/jsonp chunk loading","webpack://myos-frontend/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('el-tabs',{attrs:{\"type\":\"border-card\"},model:{value:(_vm.activeTab),callback:function ($$v) {_vm.activeTab=$$v},expression:\"activeTab\"}},[_c('el-tab-pane',{attrs:{\"label\":\"进程、内存、设备、中断管理\",\"name\":\"process\"}},[_c('div',{staticClass:\"tab-content\"},[_c('system-clock'),_c('div',{staticClass:\"management-container\"},[_c('process-management',{staticClass:\"left-panel\"}),_c('memory-management',{staticClass:\"right-panel\"})],1)],1)]),_c('el-tab-pane',{attrs:{\"label\":\"文件系统\",\"name\":\"file\"}},[_c('div',{staticClass:\"tab-content\"},[_c('system-clock'),_c('file-system')],1)])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"system-clock\"},[_c('span',{staticClass:\"clock-display\"},[_vm._v(_vm._s(_vm.formatTime(_vm.currentTime))+\" / \"+_vm._s(_vm.currentTime))])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import axios from 'axios'\r\n\r\n// 创建axios实例\r\nconst service = axios.create({\r\n  baseURL: 'http://localhost:8080', // API的基础URL\r\n  timeout: 5000 // 请求超时时间\r\n})\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(\r\n  config => {\r\n    return config\r\n  },\r\n  error => {\r\n    console.error('请求错误：', error)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    return response.data\r\n  },\r\n  error => {\r\n    console.error('响应错误：', error)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service\r\n","import request from './config'\r\n\r\n// 启动系统时钟\r\nexport function startSystemClock() {\r\n  return request({\r\n    url: '/timer/start',\r\n    method: 'post'\r\n  })\r\n}\r\n\r\n// 停止系统时钟\r\nexport function stopSystemClock() {\r\n  return request({\r\n    url: '/timer/stop',\r\n    method: 'post'\r\n  })\r\n}\r\n\r\n// 获取当前时间\r\nexport function getCurrentTime() {\r\n  return request({\r\n    url: '/timer/current',\r\n    method: 'get'\r\n  })\r\n}\r\n","<template>\r\n  <div class=\"system-clock\">\r\n    <span class=\"clock-display\">{{ formatTime(currentTime) }}  / {{ currentTime }}</span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getCurrentTime } from '@/api/clock'\r\n\r\nexport default {\r\n  name: 'SystemClock',\r\n  data() {\r\n    return {\r\n      currentTime: 0,\r\n      timer: null\r\n    }\r\n  },\r\n  methods: {\r\n    formatTime(seconds) {\r\n      const hours = Math.floor(seconds / 3600)\r\n      const minutes = Math.floor((seconds % 3600) / 60)\r\n      const secs = seconds % 60\r\n      return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(secs).padStart(2, '0')}`\r\n    },\r\n    async updateTime() {\r\n      try {\r\n        const response = await getCurrentTime()\r\n        this.currentTime = response.currentTime\r\n      } catch (error) {\r\n        console.error('获取时间失败:', error)\r\n      }\r\n    },\r\n    startTimer() {\r\n      this.updateTime()\r\n      this.timer = setInterval(this.updateTime, 1000)\r\n    },\r\n    clearTimer() {\r\n      if (this.timer) {\r\n        clearInterval(this.timer)\r\n        this.timer = null\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.startTimer()\r\n  },\r\n  beforeDestroy() {\r\n    this.clearTimer()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.system-clock {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  z-index: 1;\r\n}\r\n\r\n.clock-display {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  font-family: monospace;\r\n}\r\n</style> ","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SystemClock.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SystemClock.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./SystemClock.vue?vue&type=template&id=b98e2ed4&scoped=true\"\nimport script from \"./SystemClock.vue?vue&type=script&lang=js\"\nexport * from \"./SystemClock.vue?vue&type=script&lang=js\"\nimport style0 from \"./SystemClock.vue?vue&type=style&index=0&id=b98e2ed4&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b98e2ed4\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"process-management\"},[_c('div',{staticClass:\"process-control\"},[_c('el-form',{staticClass:\"input-form\",attrs:{\"model\":_vm.processForm,\"label-width\":\"80px\",\"inline\":\"\"}},[_c('el-form-item',{attrs:{\"label\":\"进程名称\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入进程名称\"},model:{value:(_vm.processForm.name),callback:function ($$v) {_vm.$set(_vm.processForm, \"name\", $$v)},expression:\"processForm.name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"优先级\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\"},model:{value:(_vm.processForm.priority),callback:function ($$v) {_vm.$set(_vm.processForm, \"priority\", $$v)},expression:\"processForm.priority\"}},[_c('el-option',{attrs:{\"label\":\"高\",\"value\":3}}),_c('el-option',{attrs:{\"label\":\"中\",\"value\":2}}),_c('el-option',{attrs:{\"label\":\"低\",\"value\":1}})],1)],1),_c('el-form-item',{attrs:{\"label\":\"内存大小\"}},[_c('el-input-number',{attrs:{\"min\":1,\"max\":1024,\"step\":1},model:{value:(_vm.processForm.memorySize),callback:function ($$v) {_vm.$set(_vm.processForm, \"memorySize\", $$v)},expression:\"processForm.memorySize\"}}),_c('span',{staticClass:\"unit\"},[_vm._v(\"MB\")])],1),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.createProcess}},[_vm._v(\"创建进程\")])],1)],1)],1),_c('div',{staticClass:\"process-queues\"},[_c('div',{staticClass:\"queue-container\"},[_c('h3',[_vm._v(\"就绪队列\")]),_c('div',{staticClass:\"queue ready-queue\"},_vm._l((_vm.readyQueue),function(process){return _c('el-tag',{key:process.id,staticClass:\"process-tag\"},[_c('div',{staticClass:\"process-info\"},[_c('span',[_vm._v(_vm._s(process.name))]),_c('el-tag',{attrs:{\"size\":\"small\",\"type\":_vm.getPriorityType(process.priority)}},[_vm._v(\"P\"+_vm._s(process.priority))]),_c('el-tag',{attrs:{\"size\":\"small\",\"type\":\"info\"}},[_vm._v(_vm._s(process.memorySize)+\"MB\")])],1)])}),1)]),_c('div',{staticClass:\"queue-container\"},[_c('h3',[_vm._v(\"运行队列\")]),_c('div',{staticClass:\"queue running-queue\"},_vm._l((_vm.runningQueue),function(process){return _c('el-tag',{key:process.id,staticClass:\"process-tag\",attrs:{\"type\":\"success\"}},[_c('div',{staticClass:\"process-info\"},[_c('span',[_vm._v(_vm._s(process.name))]),_c('el-tag',{attrs:{\"size\":\"small\",\"type\":_vm.getPriorityType(process.priority)}},[_vm._v(\"P\"+_vm._s(process.priority))]),_c('el-tag',{attrs:{\"size\":\"small\",\"type\":\"info\"}},[_vm._v(_vm._s(process.memorySize)+\"MB\")])],1)])}),1)]),_c('div',{staticClass:\"queue-container\"},[_c('h3',[_vm._v(\"阻塞队列\")]),_c('div',{staticClass:\"queue blocked-queue\"},_vm._l((_vm.blockedQueue),function(process){return _c('el-tag',{key:process.id,staticClass:\"process-tag\",attrs:{\"type\":\"warning\"}},[_c('div',{staticClass:\"process-info\"},[_c('span',[_vm._v(_vm._s(process.name))]),_c('el-tag',{attrs:{\"size\":\"small\",\"type\":_vm.getPriorityType(process.priority)}},[_vm._v(\"P\"+_vm._s(process.priority))]),_c('el-tag',{attrs:{\"size\":\"small\",\"type\":\"info\"}},[_vm._v(_vm._s(process.memorySize)+\"MB\")])],1)])}),1)]),_c('div',{staticClass:\"queue-container\"},[_c('h3',[_vm._v(\"终止队列\")]),_c('div',{staticClass:\"queue terminated-queue\"},_vm._l((_vm.terminatedQueue),function(process){return _c('el-tag',{key:process.id,staticClass:\"process-tag\",attrs:{\"type\":\"info\"}},[_c('div',{staticClass:\"process-info\"},[_c('span',[_vm._v(_vm._s(process.name))]),_c('el-tag',{attrs:{\"size\":\"small\",\"type\":_vm.getPriorityType(process.priority)}},[_vm._v(\"P\"+_vm._s(process.priority))]),_c('el-tag',{attrs:{\"size\":\"small\",\"type\":\"info\"}},[_vm._v(_vm._s(process.memorySize)+\"MB\")])],1)])}),1)])]),_c('div',{staticClass:\"process-list\"},[_c('div',{staticClass:\"process-list-header\"},[_c('h3',[_vm._v(\"进程列表\")]),_c('div',{staticClass:\"scheduling-algorithm\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"调度算法：\")]),_c('el-select',{attrs:{\"size\":\"small\",\"placeholder\":\"请选择调度算法\"},on:{\"change\":_vm.handleSchedulingAlgorithmChange},model:{value:(_vm.schedulingAlgorithm),callback:function ($$v) {_vm.schedulingAlgorithm=$$v},expression:\"schedulingAlgorithm\"}},_vm._l((_vm.schedulingOptions),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)]),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.allProcesses,\"border\":\"\",\"height\":\"280\"}},[_c('el-table-column',{attrs:{\"prop\":\"id\",\"label\":\"进程ID\",\"width\":\"100\",\"align\":\"center\",\"sortable\":\"\"}}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"进程名称\",\"width\":\"100\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"priority\",\"label\":\"优先级\",\"width\":\"80\",\"align\":\"center\",\"filters\":[\n          { text: '高', value: 3 },\n          { text: '中', value: 2 },\n          { text: '低', value: 1 }\n        ],\"filter-method\":_vm.filterPriority,\"filter-placement\":\"bottom\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-tag',{attrs:{\"type\":_vm.getPriorityType(scope.row.priority)}},[_vm._v(\" P\"+_vm._s(scope.row.priority)+\" \")])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"memorySize\",\"label\":\"内存大小\",\"width\":\"120\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\" \"+_vm._s(scope.row.memorySize)+\"MB \")]}}])}),_c('el-table-column',{attrs:{\"prop\":\"state\",\"label\":\"状态\",\"width\":\"120\",\"align\":\"center\",\"filters\":[\n          { text: '就绪', value: 'READY' },\n          { text: '运行中', value: 'RUNNING' },\n          { text: '阻塞', value: 'BLOCKED' },\n          { text: '已终止', value: 'TERMINATED' }\n        ],\"filter-method\":_vm.filterState,\"filter-placement\":\"bottom\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-tag',{attrs:{\"type\":_vm.getStateType(scope.row.state)}},[_vm._v(\" \"+_vm._s(_vm.getStateText(scope.row.state))+\" \")])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"createTime\",\"label\":\"创建时间\",\"width\":\"180\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\" \"+_vm._s(_vm.formatTime(scope.row.createTime))+\" \")]}}])}),_c('el-table-column',{attrs:{\"label\":\"操作\",\"align\":\"center\",\"width\":\"200\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{staticStyle:{\"margin-left\":\"10px\"},attrs:{\"size\":\"mini\",\"type\":\"primary\",\"disabled\":scope.row.state !== 'RUNNING'},on:{\"click\":function($event){return _vm.handleEnableDevice(scope.row)}}},[_vm._v(\"启用设备\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"disabled\":scope.row.state === 'TERMINATED'},on:{\"click\":function($event){return _vm.handleTerminate(scope.row)}}},[_vm._v(\"终止\")])]}}])})],1)],1),_c('el-dialog',{attrs:{\"title\":\"设备管理\",\"visible\":_vm.deviceDialogVisible,\"width\":\"80%\",\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.deviceDialogVisible=$event}}},[_c('div',{staticClass:\"device-control\"},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.devices}},[_c('el-table-column',{attrs:{\"prop\":\"id\",\"label\":\"设备ID\",\"align\":\"center\",\"header-align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"设备名称\",\"align\":\"center\",\"header-align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"type\",\"label\":\"设备类型\",\"align\":\"center\",\"header-align\":\"center\",\"filters\":[\n            { text: '打印机', value: 'PRINTER' },\n            { text: '磁盘', value: 'DISK' },\n            { text: '扫描仪', value: 'SCANNER' },\n            { text: '网络设备', value: 'NETWORK' },\n            { text: '其他', value: 'OTHER' }\n          ],\"filter-method\":_vm.filterDeviceType,\"filter-placement\":\"bottom\"}}),_c('el-table-column',{attrs:{\"prop\":\"status\",\"label\":\"状态\",\"align\":\"center\",\"header-align\":\"center\",\"filters\":[\n            { text: '空闲', value: 'IDLE' },\n            { text: '忙碌', value: 'BUSY' },\n            { text: '等待', value: 'WAITING' },\n            { text: '错误', value: 'ERROR' }\n          ],\"filter-method\":_vm.filterDeviceStatus,\"filter-placement\":\"bottom\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-tag',{attrs:{\"type\":_vm.getStatusType(scope.row.status)}},[_vm._v(\" \"+_vm._s(_vm.getDeviceStatusText(scope.row.status))+\" \")])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"currentProcessId\",\"label\":\"当前进程\",\"align\":\"center\",\"header-align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\" \"+_vm._s(scope.row.currentProcessId || '无')+\" \")]}}])}),_c('el-table-column',{attrs:{\"prop\":\"remainingTime\",\"label\":\"剩余时间\",\"align\":\"center\",\"header-align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\" \"+_vm._s(scope.row.remainingTime || 0)+\"秒 \")]}}])}),_c('el-table-column',{attrs:{\"label\":\"操作\",\"width\":\"180\",\"align\":\"center\",\"header-align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\",\"disabled\":scope.row.status !== 'IDLE'},on:{\"click\":function($event){return _vm.showAllocateDialog(scope.row)}}},[_vm._v(\" 请求 \")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"disabled\":scope.row.status === 'IDLE'},on:{\"click\":function($event){return _vm.handleReleaseDevice(scope.row.id)}}},[_vm._v(\" 释放 \")])]}}])})],1)],1)]),_c('el-dialog',{attrs:{\"title\":\"分配设备\",\"visible\":_vm.allocateDialogVisible,\"width\":\"30%\",\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.allocateDialogVisible=$event}}},[_c('el-form',{attrs:{\"model\":_vm.allocateForm,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"设备名称\"}},[_c('span',[_vm._v(_vm._s(_vm.selectedDevice ? _vm.selectedDevice.name : ''))])]),_c('el-form-item',{attrs:{\"label\":\"运行时间\"}},[_c('el-input-number',{attrs:{\"min\":1,\"max\":60,\"label\":\"秒\"},model:{value:(_vm.allocateForm.timeout),callback:function ($$v) {_vm.$set(_vm.allocateForm, \"timeout\", $$v)},expression:\"allocateForm.timeout\"}}),_c('span',{staticClass:\"unit\",staticStyle:{\"margin-left\":\"10px\"}},[_vm._v(\"秒\")])],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.allocateDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.handleAllocate}},[_vm._v(\"确 定\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import request from './config'\n\n// 进程相关 API\nexport const processApi = {\n    // 创建进程\n    createProcess: (processData) => {\n        return request.post('/process', processData);\n    },\n\n    // 获取所有进程\n    getAllProcesses: () => {\n        return request.get('/process');\n    },\n\n    // 获取特定状态的进程\n    getProcessesByState: (state) => {\n        return request.get(`/process/${state}`);\n    },\n\n    // 获取当前运行进程\n    getCurrentProcess: () => {\n        return request.get('/process/current');\n    },\n\n    // 删除进程\n    deleteProcess: (id) => {\n        return request.delete(`/process/${id}`);\n    },\n\n    // 更新进程状态\n    updateProcessState: (id, state) => {\n        return request.put(`/process/${id}/state`, { state });\n    },\n\n    // 终止进程\n    terminateProcess: (id) => {\n        return request.post(`/process/${id}/terminate`);\n    },\n\n    // 更新进程优先级\n    updateProcessPriority: (id, priority) => {\n        return request.put(`/process/${id}/priority`, { priority });\n    },\n\n    // 获取进程详细信息\n    getProcessInfo: (id) => {\n        return request.get(`/process/${id}/info`);\n    },\n\n    // 获取进程统计信息\n    getProcessStats: () => {\n        return request.get('/process/stats');\n    },\n\n    // 设置调度算法\n    setSchedulingAlgorithm: (algorithm) => {\n        return request.put(`/process/scheduling-algorithm?algorithm=${algorithm}`);\n    },\n\n    // 获取当前调度算法\n    getSchedulingAlgorithm: () => {\n        return request.get('/process/scheduling-algorithm');\n    },\n\n    // 批量更新进程优先级\n    batchUpdatePriorities: (priorities) => {\n        return request.put('/process/batch-update-priorities', priorities);\n    }\n};\n\n// 中断相关 API\nexport const interruptApi = {\n    // 触发进程中断\n    triggerInterrupt: (id, reason) => {\n        return request.post(`/process/${id}/interrupt?reason=${reason}`);\n    }\n};\n\n// 设备相关 API\nexport const deviceApi = {\n    // 请求设备\n    requestDevice: (id, deviceType) => {\n        return request.post(`/process/${id}/request-device`, { deviceType });\n    },\n\n    // 释放设备\n    releaseDevice: (id, deviceType) => {\n        return request.post(`/process/${id}/release-device`, { deviceType });\n    }\n};\n","import request from './config'\r\n\r\n// 获取可用设备\r\nexport function getAvailableDevices() {\r\n  return request({\r\n    url: '/device/available',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 获取全部设备\r\nexport function getAllDevices() {\r\n  return request({\r\n    url: '/device',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 获取设备状态\r\nexport function getDeviceStatus(deviceId) {\r\n  return request({\r\n    url: '/device/status',\r\n    method: 'get',\r\n    params: { deviceId }\r\n  })\r\n}\r\n\r\n// 请求设备\r\nexport function requestDevice(processId, deviceId, timeout) {\r\n  return request({\r\n    url: `/process/${processId}/request-device`,\r\n    method: 'post',\r\n    params: { deviceId, timeout }\r\n  })\r\n}\r\n\r\n// 释放设备\r\nexport function releaseDevice(processId, deviceId) {\r\n  return request({\r\n    url: `/process/${processId}/release-device`,\r\n    method: 'post',\r\n    params: { deviceId }\r\n  })\r\n}\r\n\r\n// 按类型获取设备列表\r\nexport function getDevicesByType(type) {\r\n  return request({\r\n    url: `/device/type/${type}`,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 获取设备详细信息\r\nexport function getDeviceInfo(deviceId) {\r\n  return request({\r\n    url: `/device/${deviceId}`,\r\n    method: 'get'\r\n  })\r\n}\r\n","<template>\n  <div class=\"process-management\">\n    <div class=\"process-control\">\n      <el-form class=\"input-form\" :model=\"processForm\" label-width=\"80px\" inline>\n        <el-form-item label=\"进程名称\">\n          <el-input v-model=\"processForm.name\" placeholder=\"请输入进程名称\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"优先级\">\n          <el-select v-model=\"processForm.priority\" placeholder=\"请选择\">\n            <el-option label=\"高\" :value=\"3\"></el-option>\n            <el-option label=\"中\" :value=\"2\"></el-option>\n            <el-option label=\"低\" :value=\"1\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"内存大小\">\n          <el-input-number v-model=\"processForm.memorySize\" :min=\"1\" :max=\"1024\" :step=\"1\"></el-input-number>\n          <span class=\"unit\">MB</span>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"createProcess\">创建进程</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n\n    <div class=\"process-queues\">\n      <div class=\"queue-container\">\n        <h3>就绪队列</h3>\n        <div class=\"queue ready-queue\">\n          <el-tag v-for=\"process in readyQueue\" :key=\"process.id\" class=\"process-tag\">\n            <div class=\"process-info\">\n              <span>{{ process.name }}</span>\n              <el-tag size=\"small\" :type=\"getPriorityType(process.priority)\">P{{ process.priority }}</el-tag>\n              <el-tag size=\"small\" type=\"info\">{{ process.memorySize }}MB</el-tag>\n            </div>\n          </el-tag>\n        </div>\n      </div>\n\n      <div class=\"queue-container\">\n        <h3>运行队列</h3>\n        <div class=\"queue running-queue\">\n          <el-tag v-for=\"process in runningQueue\" :key=\"process.id\" type=\"success\" class=\"process-tag\">\n            <div class=\"process-info\">\n              <span>{{ process.name }}</span>\n              <el-tag size=\"small\" :type=\"getPriorityType(process.priority)\">P{{ process.priority }}</el-tag>\n              <el-tag size=\"small\" type=\"info\">{{ process.memorySize }}MB</el-tag>\n            </div>\n          </el-tag>\n        </div>\n      </div>\n\n      <div class=\"queue-container\">\n        <h3>阻塞队列</h3>\n        <div class=\"queue blocked-queue\">\n          <el-tag v-for=\"process in blockedQueue\" :key=\"process.id\" type=\"warning\" class=\"process-tag\">\n            <div class=\"process-info\">\n              <span>{{ process.name }}</span>\n              <el-tag size=\"small\" :type=\"getPriorityType(process.priority)\">P{{ process.priority }}</el-tag>\n              <el-tag size=\"small\" type=\"info\">{{ process.memorySize }}MB</el-tag>\n            </div>\n          </el-tag>\n        </div>\n      </div>\n\n      <div class=\"queue-container\">\n        <h3>终止队列</h3>\n        <div class=\"queue terminated-queue\">\n          <el-tag v-for=\"process in terminatedQueue\" :key=\"process.id\" type=\"info\" class=\"process-tag\">\n            <div class=\"process-info\">\n              <span>{{ process.name }}</span>\n              <el-tag size=\"small\" :type=\"getPriorityType(process.priority)\">P{{ process.priority }}</el-tag>\n              <el-tag size=\"small\" type=\"info\">{{ process.memorySize }}MB</el-tag>\n            </div>\n          </el-tag>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"process-list\">\n      <div class=\"process-list-header\">\n        <h3>进程列表</h3>\n        <div class=\"scheduling-algorithm\">\n          <span class=\"label\">调度算法：</span>\n          <el-select \n            v-model=\"schedulingAlgorithm\" \n            @change=\"handleSchedulingAlgorithmChange\" \n            size=\"small\"\n            placeholder=\"请选择调度算法\"\n          >\n            <el-option \n              v-for=\"item in schedulingOptions\" \n              :key=\"item.value\" \n              :label=\"item.label\" \n              :value=\"item.value\"\n            ></el-option>\n          </el-select>\n        </div>\n      </div>\n      <el-table \n        :data=\"allProcesses\" \n        style=\"width: 100%\" \n        border\n        height=\"280\"\n      >\n        <el-table-column \n          prop=\"id\" \n          label=\"进程ID\" \n          width=\"100\" \n          align=\"center\"\n          sortable\n        ></el-table-column>\n        <el-table-column prop=\"name\" label=\"进程名称\" width=\"100\" align=\"center\"></el-table-column>\n        <el-table-column \n          prop=\"priority\" \n          label=\"优先级\" \n          width=\"80\" \n          align=\"center\"\n          :filters=\"[\n            { text: '高', value: 3 },\n            { text: '中', value: 2 },\n            { text: '低', value: 1 }\n          ]\"\n          :filter-method=\"filterPriority\"\n          filter-placement=\"bottom\"\n        >\n          <template slot-scope=\"scope\">\n            <el-tag :type=\"getPriorityType(scope.row.priority)\">\n              P{{ scope.row.priority }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"memorySize\" label=\"内存大小\" width=\"120\" align=\"center\">\n          <template slot-scope=\"scope\">\n            {{ scope.row.memorySize }}MB\n          </template>\n        </el-table-column>\n        <el-table-column \n          prop=\"state\" \n          label=\"状态\" \n          width=\"120\" \n          align=\"center\"\n          :filters=\"[\n            { text: '就绪', value: 'READY' },\n            { text: '运行中', value: 'RUNNING' },\n            { text: '阻塞', value: 'BLOCKED' },\n            { text: '已终止', value: 'TERMINATED' }\n          ]\"\n          :filter-method=\"filterState\"\n          filter-placement=\"bottom\"\n        >\n          <template slot-scope=\"scope\">\n            <el-tag :type=\"getStateType(scope.row.state)\">\n              {{ getStateText(scope.row.state) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"180\" align=\"center\">\n          <template slot-scope=\"scope\">\n            {{ formatTime(scope.row.createTime) }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" align=\"center\" width=\"200\">\n          <template slot-scope=\"scope\">\n            <el-button\n              style=\"margin-left: 10px;\"\n              size=\"mini\"\n              type=\"primary\"\n              :disabled=\"scope.row.state !== 'RUNNING'\"\n              @click=\"handleEnableDevice(scope.row)\"\n            >启用设备</el-button>\n            <el-button\n              size=\"mini\"\n              type=\"danger\"\n              @click=\"handleTerminate(scope.row)\"\n              :disabled=\"scope.row.state === 'TERMINATED'\"\n            >终止</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n\n    <!-- 设备管理相关内容 -->\n    <el-dialog\n      title=\"设备管理\"\n      :visible.sync=\"deviceDialogVisible\"\n      width=\"80%\"\n      :close-on-click-modal=\"false\">\n      <div class=\"device-control\">\n        <el-table :data=\"devices\" style=\"width: 100%\">\n          <el-table-column prop=\"id\" label=\"设备ID\" align=\"center\" header-align=\"center\" />\n          <el-table-column prop=\"name\" label=\"设备名称\" align=\"center\" header-align=\"center\" />\n          <el-table-column \n            prop=\"type\" \n            label=\"设备类型\" \n            align=\"center\" \n            header-align=\"center\"\n            :filters=\"[\n              { text: '打印机', value: 'PRINTER' },\n              { text: '磁盘', value: 'DISK' },\n              { text: '扫描仪', value: 'SCANNER' },\n              { text: '网络设备', value: 'NETWORK' },\n              { text: '其他', value: 'OTHER' }\n            ]\"\n            :filter-method=\"filterDeviceType\"\n            filter-placement=\"bottom\"\n          >\n          </el-table-column>\n          <el-table-column \n            prop=\"status\" \n            label=\"状态\" \n            align=\"center\" \n            header-align=\"center\"\n            :filters=\"[\n              { text: '空闲', value: 'IDLE' },\n              { text: '忙碌', value: 'BUSY' },\n              { text: '等待', value: 'WAITING' },\n              { text: '错误', value: 'ERROR' }\n            ]\"\n            :filter-method=\"filterDeviceStatus\"\n            filter-placement=\"bottom\"\n          >\n            <template slot-scope=\"scope\">\n              <el-tag :type=\"getStatusType(scope.row.status)\">\n                {{ getDeviceStatusText(scope.row.status) }}\n              </el-tag>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"currentProcessId\" label=\"当前进程\" align=\"center\" header-align=\"center\">\n            <template slot-scope=\"scope\">\n              {{ scope.row.currentProcessId || '无' }}\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"remainingTime\" label=\"剩余时间\" align=\"center\" header-align=\"center\">\n            <template slot-scope=\"scope\">\n              {{ scope.row.remainingTime || 0 }}秒\n            </template>\n          </el-table-column>\n          <el-table-column label=\"操作\" width=\"180\" align=\"center\" header-align=\"center\">\n            <template slot-scope=\"scope\">\n              <el-button\n                size=\"mini\"\n                type=\"primary\"\n                @click=\"showAllocateDialog(scope.row)\"\n                :disabled=\"scope.row.status !== 'IDLE'\">\n                请求\n              </el-button>\n              <el-button\n                size=\"mini\"\n                type=\"danger\"\n                @click=\"handleReleaseDevice(scope.row.id)\"\n                :disabled=\"scope.row.status === 'IDLE'\">\n                释放\n              </el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n    </el-dialog>\n\n    <!-- 分配设备对话框 -->\n    <el-dialog\n      title=\"分配设备\"\n      :visible.sync=\"allocateDialogVisible\"\n      width=\"30%\"\n      :close-on-click-modal=\"false\">\n      <el-form :model=\"allocateForm\" label-width=\"100px\">\n        <el-form-item label=\"设备名称\">\n          <span>{{ selectedDevice ? selectedDevice.name : '' }}</span>\n        </el-form-item>\n        <el-form-item label=\"运行时间\">\n          <el-input-number \n            v-model=\"allocateForm.timeout\" \n            :min=\"1\" \n            :max=\"60\"\n            label=\"秒\">\n          </el-input-number>\n          <span class=\"unit\" style=\"margin-left: 10px;\">秒</span>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"allocateDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"handleAllocate\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { processApi, interruptApi } from '@/api/process_interrupt_device'\nimport { \n  getAllDevices, \n  getAvailableDevices, \n  getDeviceStatus,\n  requestDevice,\n  releaseDevice,\n  getDevicesByType,\n  getDeviceInfo \n} from '@/api/device'\n\nexport default {\n  name: 'ProcessManagement',\n  data() {\n    return {\n      processForm: {\n        name: '',\n        priority: 2,\n        memorySize: 64\n      },\n      schedulingAlgorithm: '',\n      schedulingOptions: [\n        { label: '先到先服务 (FCFS)', value: 'FCFS' },\n        { label: '优先级调度 (PRIORITY)', value: 'PRIORITY' }\n      ],\n      readyQueue: [],\n      runningQueue: [],\n      blockedQueue: [],\n      terminatedQueue: [],\n      allProcesses: [],\n      timer: null,\n      selectedState: 'ALL',\n      searchKeyword: '',\n      currentProcessId: null,\n\n      // 设备管理相关\n      devices: [],\n      deviceDialogVisible: false,\n      allocateDialogVisible: false,\n      selectedDevice: null,\n      allocateForm: {\n        timeout: 5\n      },\n    }\n  },\n  computed: {\n    filteredProcesses() {\n      let result = this.allProcesses\n      \n      // 状态筛选\n      if (this.selectedState !== 'ALL') {\n        result = result.filter(process => process.state === this.selectedState)\n      }\n      \n      // 关键词搜索\n      if (this.searchKeyword) {\n        const keyword = this.searchKeyword.toLowerCase()\n        result = result.filter(process => \n          process.name.toLowerCase().includes(keyword)\n        )\n      }\n      \n      return result\n    },\n  },\n  async created() {\n    try {\n      // 先获取当前调度算法\n      const response = await processApi.getSchedulingAlgorithm()\n      if (response.success) {\n        this.schedulingAlgorithm = response.data.algorithm\n      }\n    } catch (error) {\n      console.error('获取调度算法失败:', error)\n      this.schedulingAlgorithm = 'FCFS' // 如果获取失败，设置默认值\n    }\n    \n    // 获取进程数据\n    this.fetchProcesses()\n    // 设置定时器，每30秒更新一次数据\n    this.timer = setInterval(this.fetchProcesses, 30000)\n  },\n  beforeDestroy() {\n    // 组件销毁前清除定时器\n    if (this.timer) {\n      clearInterval(this.timer)\n    }\n  },\n  methods: {\n    // 处理前端显示细节\n    getPriorityType(priority) {\n      const types = {\n        1: 'info',    // 低优先级\n        2: 'warning', // 中优先级\n        3: 'danger'   // 高优先级\n      }\n      return types[priority] || 'info'\n    },\n    getStateType(state) {\n      const types = {\n        'READY': 'info',\n        'RUNNING': 'success',\n        'BLOCKED': 'warning',\n        'TERMINATED': 'info'\n      }\n      return types[state] || 'info'\n    },\n    getStateText(state) {\n      const texts = {\n        'READY': '就绪',\n        'RUNNING': '运行中',\n        'BLOCKED': '阻塞',\n        'TERMINATED': '已终止'\n      }\n      return texts[state] || state\n    },\n    formatTime(timestamp) {\n      if (!timestamp) return '-'\n      const date = new Date(timestamp)\n      return date.toLocaleString()\n    },\n\n    // 进程操作相关方法\n    async handleTerminate(process) {\n      try {\n        const response = await processApi.terminateProcess(process.id)\n        if (response.success) {\n          this.$message.success(response.message || `进程 ${process.name} 已终止`)\n          // 更新进程列表\n          await this.fetchProcesses()\n          // 如果当前进程在运行队列中，清空运行队列\n          if (this.runningQueue.some(p => p.id === process.id)) {\n            this.runningQueue = []\n          }\n        } else {\n          this.$message.error(response.message || '终止进程失败')\n        }\n      } catch (error) {\n        console.error('终止进程错误:', error)\n        this.$message.error('终止进程失败')\n      }\n    },\n\n    // 获取特定状态的进程\n    async getProcessesByState(state) {\n      try {\n        const response = await processApi.getProcessesByState(state)\n        return response.data || []\n      } catch (error) {\n        console.error(`获取${state}状态进程失败:`, error)\n        return []\n      }\n    },\n\n    // 更新后的fetchProcesses方法\n    async fetchProcesses() {\n      try {\n        // 获取所有进程\n        const allResponse = await processApi.getAllProcesses()\n        this.allProcesses = allResponse.data || []\n\n        // 获取各状态进程\n        this.readyQueue = await this.getProcessesByState('ready')\n        // 使用 getCurrentProcess 获取运行中的进程\n        const currentProcessResponse = await processApi.getCurrentProcess()\n        this.runningQueue = currentProcessResponse.data ? [currentProcessResponse.data] : []\n        this.blockedQueue = await this.getProcessesByState('waiting')\n        this.terminatedQueue = await this.getProcessesByState('terminated')\n      } catch (error) {\n        console.error('获取进程数据失败:', error)\n        this.$message.error('获取进程数据失败')\n        // 清空所有队列\n        this.readyQueue = []\n        this.runningQueue = []\n        this.blockedQueue = []\n        this.terminatedQueue = []\n        this.allProcesses = []\n      }\n    },\n\n    async createProcess() {\n      try {\n        const response = await processApi.createProcess({\n          name: this.processForm.name,\n          priority: this.processForm.priority,\n          memorySize: this.processForm.memorySize,\n        })\n        \n        if (response.success) {\n          this.$message.success('进程创建成功')\n          this.processForm.name = ''\n          // 立即刷新数据\n          await this.fetchProcesses()\n        } else {\n          this.$message.error(response.message || '创建进程失败')\n        }\n      } catch (error) {\n        this.$message.error('创建进程失败，请重试')\n      }\n    },\n    \n    // 设备管理相关方法\n    async handleEnableDevice(row) {\n      try {\n        this.currentProcessId = row.id\n        await this.fetchDevices()\n        this.deviceDialogVisible = true\n      } catch (error) {\n        console.error('获取设备列表失败:', error)\n        this.$message.error('获取设备列表失败')\n      }\n    },\n\n    async fetchDevices() {\n      try {\n        const response = await getAllDevices()\n        console.log('response', response)\n        if (response.message) {\n          this.devices = response.data || []\n          console.log('devices', response.data)\n        } else {\n          this.$message.error(response.message || '获取设备列表失败')\n          this.devices = []\n        }\n      } catch (error) {\n        console.error('获取设备列表失败:', error)\n        this.$message.error('获取设备列表失败')\n        this.devices = []\n      }\n    },\n\n    // 获取状态标签类型\n    getStatusType(status) {\n      const types = {\n        'IDLE': 'success',    // 空闲状态\n        'BUSY': 'warning',    // 忙碌状态\n        'ERROR': 'danger',    // 错误状态\n        'WAITING': 'info'     // 等待状态\n      }\n      return types[status] || 'info'\n    },\n\n    // 弹出设备分配对话框\n    showAllocateDialog(device) {\n      this.selectedDevice = device\n      this.allocateForm.timeout = 15\n      this.allocateDialogVisible = true\n    },\n\n    // 确认分配设备\n    async handleAllocate() {\n      try {\n        if (!this.selectedDevice) {\n          this.$message.error('未选择设备')\n          return\n        }\n\n        const response = await requestDevice(\n          this.currentProcessId,\n          this.selectedDevice.id,\n          this.allocateForm.timeout\n        )\n        \n        if (response.success) {\n          // 触发中断\n          await interruptApi.triggerInterrupt(this.currentProcessId, 'IO')\n          // 获取进程数据\n          await this.fetchProcesses()\n          this.$message.success('设备分配成功')\n          this.allocateDialogVisible = false\n\n\n          // 刷新设备列表\n          await this.fetchDevices()\n        } else {\n          this.$message.error(response.message || '设备分配失败')\n        }\n      } catch (error) {\n        console.error('设备分配失败:', error)\n        this.$message.error('设备分配失败')\n      }\n    },\n\n    // 释放设备\n    async handleReleaseDevice(deviceId) {\n      try {\n        const response = await releaseDevice(\n          this.currentProcessId,\n          deviceId\n        )\n        \n        if (response.success) {\n          this.$message.success(response.message || '设备释放成功')\n          // 刷新设备和进程数据\n          await Promise.all([\n            this.fetchDevices(),\n            this.fetchProcesses()\n          ])\n        } else {\n          this.$message.error(response.message || '设备释放失败')\n        }\n      } catch (error) {\n        console.error('设备释放失败:', error)\n        this.$message.error('设备释放失败')\n      }\n    },\n\n    handleSearch() {\n      // 可以在这里添加额外的搜索逻辑\n    },\n\n    // 添加状态筛选方法\n    filterState(value, row) {\n      return row.state === value\n    },\n\n    // 添加优先级筛选方法\n    filterPriority(value, row) {\n      return row.priority === value\n    },\n\n    // 处理调度算法变更\n\n    async handleSchedulingAlgorithmChange(newValue) {\n      console.log('用户选择的调度算法:', newValue);\n\n      const originalValue = this.schedulingAlgorithm; // 保留原始值以便回退\n\n      try {\n        const response = await processApi.setSchedulingAlgorithm(newValue);\n\n        if (response?.success) {\n          this.$message.success(response.message || '调度算法设置成功');\n          this.schedulingAlgorithm = newValue; // 显式设置为新值（以防同步问题）\n          \n          // 刷新进程数据，确保新算法生效\n          await this.fetchProcesses();\n        } else {\n          this.$message.error(response.message || '调度算法设置失败');\n          this.schedulingAlgorithm = originalValue; // 回退\n        }\n\n      } catch (error) {\n        console.error('设置调度算法失败:', error);\n        this.$message.error('调度算法设置失败，请稍后再试');\n        this.schedulingAlgorithm = originalValue; // 出错也回退\n      }\n    },\n\n    // 设备类型筛选\n    filterDeviceType(value, row) {\n      return row.type === value\n    },\n\n    // 设备状态筛选\n    filterDeviceStatus(value, row) {\n      return row.status === value\n    },\n\n    // 获取设备状态文本\n    getDeviceStatusText(status) {\n      const statuses = {\n        'IDLE': '空闲',\n        'BUSY': '忙碌',\n        'WAITING': '等待',\n        'ERROR': '错误'\n      }\n      return statuses[status] || status\n    },\n  }\n}\n</script>\n\n<style scoped>\n.process-management {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 900px;\n  padding: 20px;\n  gap: 20px;\n}\n\n.process-control {\n  background-color: #fff;\n  padding: 20px 0 20px 20px;\n  border-radius: 4px;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n}\n\n.process-control .el-form {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-right: 10px;\n}\n\n.process-control .el-form-item {\n  margin-bottom: 0;\n  margin-right: 0;\n}\n\n.process-control .el-form-item__label {\n  padding-right: 8px;\n}\n\n.process-control .el-input {\n  width: 150px;\n}\n\n.process-control .el-select {\n  width: 120px;\n}\n\n.process-control .el-input-number {\n  width: 150px;\n}\n\n.process-control .unit {\n  margin-left: 5px;\n  color: #606266;\n}\n\n.process-control .el-button {\n  margin-left: 10px;\n}\n\n.process-queues {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 20px;\n  width: 100%;\n  margin-bottom: 20px;\n}\n\n.queue-container {\n  background-color: #fff;\n  border-radius: 4px;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n  display: flex;\n  flex-direction: column;\n  height: 240px;\n}\n\n.queue-container h3 {\n  margin: 0;\n  padding: 10px 15px;\n  border-bottom: 1px solid #ebeef5;\n  background-color: #f5f7fa;\n  border-radius: 4px 4px 0 0;\n  font-size: 14px;\n}\n\n.queue {\n  flex: 1;\n  overflow-y: auto;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.queue::-webkit-scrollbar {\n  width: 6px;\n}\n\n.queue::-webkit-scrollbar-thumb {\n  background-color: #dcdfe6;\n  border-radius: 3px;\n}\n\n.queue::-webkit-scrollbar-track {\n  background-color: #f5f7fa;\n}\n\n.process-tag {\n  margin: 0;\n  padding: 6px 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 13px;\n}\n\n.process-tag .process-info {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n}\n\n.process-tag .el-tag {\n  margin: 0;\n}\n\n.process-tag .el-tag--small {\n  height: 20px;\n  line-height: 18px;\n  padding: 0 6px;\n  font-size: 12px;\n}\n\n.process-list {\n  margin-bottom: 10px;\n  background-color: #fff;\n  border-radius: 4px;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n  height: 350px;\n  overflow: hidden;\n}\n\n.process-list-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  border-bottom: 1px solid #ebeef5;\n  background-color: #f5f7fa;\n}\n\n.process-list-header h3 {\n  margin: 0;\n  color: #303133;\n  font-size: 16px;\n}\n\n.scheduling-algorithm {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.scheduling-algorithm .label {\n  color: #606266;\n  font-size: 14px;\n}\n\n.scheduling-algorithm .el-select {\n  width: 180px;\n}\n\n.process-list el-table {\n  margin-bottom: 10px;\n}\n/* 自定义表格滚动条样式 */\n.process-list .el-table__body-wrapper::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n}\n\n.process-list .el-table__body-wrapper::-webkit-scrollbar-thumb {\n  background-color: #dcdfe6;\n  border-radius: 3px;\n}\n\n.process-list .el-table__body-wrapper::-webkit-scrollbar-track {\n  background-color: #f5f7fa;\n}\n</style> ","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ProcessManagement.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ProcessManagement.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ProcessManagement.vue?vue&type=template&id=7c58605c&scoped=true\"\nimport script from \"./ProcessManagement.vue?vue&type=script&lang=js\"\nexport * from \"./ProcessManagement.vue?vue&type=script&lang=js\"\nimport style0 from \"./ProcessManagement.vue?vue&type=style&index=0&id=7c58605c&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7c58605c\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"memory-management\"},[_c('div',{staticClass:\"memory-info\"},[_c('div',{staticClass:\"info-item\"},[_vm._v(\"总内存: \"+_vm._s(_vm.totalMemory)+\"MB\")]),_c('div',{staticClass:\"info-item\"},[_vm._v(\"已用内存: \"+_vm._s(_vm.usedMemory)+\"MB\")]),_c('div',{staticClass:\"info-item\"},[_vm._v(\"空闲内存: \"+_vm._s(_vm.freeMemory)+\"MB\")]),_c('div',{staticClass:\"memory-usage\"},[_c('div',{staticClass:\"usage-label\"},[_vm._v(\"内存利用率: \"+_vm._s(_vm.memoryUsagePercentage)+\"%\")]),_c('el-progress',{attrs:{\"percentage\":_vm.memoryUsagePercentage,\"color\":_vm.memoryUsageColor,\"stroke-width\":15,\"show-text\":false}})],1)]),_c('div',{staticClass:\"memory-blocks\"},_vm._l((_vm.memoryRows),function(row,rowIndex){return _c('div',{key:rowIndex,staticClass:\"memory-row\"},_vm._l((row),function(block,blockIndex){return _c('div',{key:blockIndex,staticClass:\"memory-block\",class:{\n          'allocated': block.status === 'ALLOCATED',\n          'free': block.status === 'FREE'\n        },attrs:{\"title\":_vm.getBlockTooltip(block)}})}),0)}),0),_c('div',{staticClass:\"interrupt-handling\"},[_c('h3',[_vm._v(\"中断处理\")]),_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticClass:\"interrupt-list\"},[_c('el-timeline',_vm._l((_vm.interrupts),function(interrupt){return _c('el-timeline-item',{key:interrupt.id,attrs:{\"type\":_vm.getInterruptType(interrupt.type),\"timestamp\":_vm.formatTimestamp(interrupt.timestamp)}},[_c('div',{staticClass:\"interrupt-content\"},[_c('div',{staticClass:\"interrupt-message\"},[_vm._v(_vm._s(interrupt.message))]),_c('div',{staticClass:\"interrupt-result\"},[_vm._v(_vm._s(interrupt.result))])])])}),1)],1)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import request from './config'\r\n\r\n/**\r\n * 获取空闲内存大小\r\n * @returns {Promise<number>} 返回空闲内存大小\r\n */\r\nexport function getFreeMemorySize() {\r\n  return request({\r\n    url: '/memory/free-size',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n/**\r\n * 获取内存状态\r\n * @returns {Promise<Array<number>>} 返回内存状态数组，非0值表示被进程占用（非0值为对应进程的id），0表示空闲\r\n */\r\nexport function getMemoryStatus() {\r\n  return request({\r\n    url: '/memory/status',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n/**\r\n * 获取空闲内存块列表\r\n * @returns {Promise<Array<{start: number, size: number}>>} 返回空闲内存块列表\r\n */\r\nexport function getFreeMemoryBlocks() {\r\n  return request({\r\n    url: '/memory/free-blocks',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n/**\r\n * 获取内存使用率\r\n * @returns {Promise<number>} 返回内存使用率（0-1之间的浮点数）\r\n */\r\nexport function getMemoryUsage() {\r\n  return request({\r\n    url: '/memory/usage',\r\n    method: 'get'\r\n  })\r\n}\r\n","import request from './config'\r\n\r\n// 触发中断\r\nexport function triggerInterrupt(data) {\r\n  return request({\r\n    url: '/interrupts/trigger',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 获取中断队列\r\nexport function getInterruptQueue() {\r\n  return request({\r\n    url: '/interrupts/queue',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 获取中断日志\r\nexport function getInterruptLogs(params) {\r\n  return request({\r\n    url: '/interrupts/logs',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n","<template>\n  <div class=\"memory-management\">\n    <!-- <h2 style=\"margin: 5px 0;\">内存管理</h2> -->\n    <div class=\"memory-info\">\n      <div class=\"info-item\">总内存: {{ totalMemory }}MB</div>\n      <div class=\"info-item\">已用内存: {{ usedMemory }}MB</div>\n      <div class=\"info-item\">空闲内存: {{ freeMemory }}MB</div>\n      <div class=\"memory-usage\">\n        <div class=\"usage-label\">内存利用率: {{ memoryUsagePercentage }}%</div>\n        <el-progress \n          :percentage=\"memoryUsagePercentage\"\n          :color=\"memoryUsageColor\"\n          :stroke-width=\"15\"\n          :show-text=\"false\"\n        ></el-progress>\n      </div>\n    </div>\n    \n    <div class=\"memory-blocks\">\n      <div v-for=\"(row, rowIndex) in memoryRows\" :key=\"rowIndex\" class=\"memory-row\">\n        <div\n          v-for=\"(block, blockIndex) in row\"\n          :key=\"blockIndex\"\n          class=\"memory-block\"\n          :class=\"{\n            'allocated': block.status === 'ALLOCATED',\n            'free': block.status === 'FREE'\n          }\"\n          :title=\"getBlockTooltip(block)\"\n        ></div>\n      </div>\n    </div>\n\n    <div class=\"interrupt-handling\">\n      <h3>中断处理</h3>\n      <div class=\"interrupt-list\" v-loading=\"loading\">\n        <el-timeline>\n          <el-timeline-item\n            v-for=\"interrupt in interrupts\"\n            :key=\"interrupt.id\"\n            :type=\"getInterruptType(interrupt.type)\"\n            :timestamp=\"formatTimestamp(interrupt.timestamp)\">\n            <div class=\"interrupt-content\">\n              <div class=\"interrupt-message\">{{ interrupt.message }}</div>\n              <div class=\"interrupt-result\">{{ interrupt.result }}</div>\n            </div>\n          </el-timeline-item>\n        </el-timeline>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getFreeMemoryBlocks, getFreeMemorySize, getMemoryStatus, getMemoryUsage } from '../api/memory'\nimport { getInterruptLogs } from '@/api/interrupt'\n\nexport default {\n  name: 'MemoryManagement',\n  data() {\n    return {\n      \n      // 内存部分\n      totalMemory: 1024, // 总内存大小（MB）\n      usedMemory: 0,\n      freeMemory: 1024,\n      blockSize: 4, // 每个块的大小（MB）\n      memoryRows: [],\n      blocksPerRow: 16,\n\n      // 中断部分\n      updateInterval: null,\n      interrupts: [],\n      timer: null,\n      loading: false\n    }\n  },\n  computed: {\n    memoryUsagePercentage() {\n      return Math.round((this.usedMemory / this.totalMemory) * 100)\n    },\n    memoryUsageColor() {\n      const percentage = this.memoryUsagePercentage\n      if (percentage < 60) return '#67C23A'\n      if (percentage < 80) return '#E6A23C'\n      return '#F56C6C'\n    }\n  },\n  created() {\n    this.initializeMemory()\n    this.fetchMemoryData()\n    // 每1秒更新一次内存数据\n    this.updateInterval = setInterval(this.fetchMemoryData, 1000)\n    // 初始加载中断日志\n    this.fetchInterruptLogs()\n    // 设置定时刷新\n    this.timer = setInterval(() => {\n      this.fetchInterruptLogs()\n    }, 1000) // 每1秒刷新一次\n  },\n  beforeDestroy() {\n    if (this.updateInterval) {\n      clearInterval(this.updateInterval)\n    }\n    // 组件销毁前清除定时器\n    if (this.timer) {\n      clearInterval(this.timer)\n    }\n  },\n  methods: {\n\n    initializeMemory() {\n      const totalBlocks = Math.ceil(this.totalMemory / this.blockSize)\n      const rows = Math.ceil(totalBlocks / this.blocksPerRow)\n      \n      this.memoryRows = Array(rows).fill().map(() => \n        Array(this.blocksPerRow).fill().map(() => ({\n          status: 'FREE',\n          processId: null,\n          size: this.blockSize\n        }))\n      )\n    },\n    getBlockTooltip(block) {\n      if (block.status === 'ALLOCATED') {\n        return `进程ID: ${block.processId}\\n大小: ${block.size}MB`\n      }\n      return '空闲块'\n    },\n    allocateMemory(processId, size) {\n      const blocksNeeded = Math.ceil(size / this.blockSize)\n      let allocatedBlocks = 0\n      \n      for (let row of this.memoryRows) {\n        for (let block of row) {\n          if (block.status === 'FREE') {\n            block.status = 'ALLOCATED'\n            block.processId = processId\n            allocatedBlocks++\n            \n            if (allocatedBlocks === blocksNeeded) {\n              this.usedMemory += size\n              this.freeMemory -= size\n              return true\n            }\n          }\n        }\n      }\n      return false\n    },\n    releaseMemory(processId) {\n      let freedSize = 0\n      \n      for (let row of this.memoryRows) {\n        for (let block of row) {\n          if (block.status === 'ALLOCATED' && block.processId === processId) {\n            block.status = 'FREE'\n            block.processId = null\n            freedSize += block.size\n          }\n        }\n      }\n      \n      this.usedMemory -= freedSize\n      this.freeMemory += freedSize\n    },\n    async fetchMemoryData() {\n      try {\n        // 获取空闲内存大小\n        const freeSize = await getFreeMemorySize()\n        this.freeMemory = freeSize\n        this.usedMemory = this.totalMemory - freeSize\n\n        // 获取内存状态\n        const memoryStatus = await getMemoryStatus()\n        this.updateMemoryBlocks(memoryStatus)\n\n        // 获取空闲内存块列表\n        const freeBlocks = await getFreeMemoryBlocks()\n\n        // 获取内存使用率\n        const usage = await getMemoryUsage()\n      } catch (error) {\n        this.$message.error('获取内存数据失败')\n      }\n    },\n    updateMemoryBlocks(memoryStatus) {\n      const totalBlocks = Math.ceil(this.totalMemory / this.blockSize)\n      const rows = Math.ceil(totalBlocks / this.blocksPerRow)\n      \n      this.memoryRows = Array(rows).fill().map((_, rowIndex) => \n        Array(this.blocksPerRow).fill().map((_, blockIndex) => {\n          const index = rowIndex * this.blocksPerRow + blockIndex\n          const processId = index < memoryStatus.length ? memoryStatus[index] : 0\n          return {\n            status: processId === 0 ? 'FREE' : 'ALLOCATED',\n            processId: processId === 0 ? null : processId,\n            size: this.blockSize\n          }\n        })\n      )\n    },\n    getInterruptType(type) {\n      const typeMap = {\n        'CLOCK': 'primary',\n        'IO': 'success',\n        'DEVICE': 'warning',\n        'ERROR': 'danger',\n        'PROCESS': 'info'\n      }\n      return typeMap[type] || 'info'\n    },\n    addInterrupt(type, message) {\n      const now = new Date()\n      const time = `${now.getHours()}:${now.getMinutes()}:${now.getSeconds()}`\n      this.interrupts.unshift({\n        type,\n        message,\n        time\n      })\n    },\n    // 获取中断日志\n    async fetchInterruptLogs() {\n      if (this.loading) return // 防止重复请求\n      this.loading = true\n      try {\n        const response = await getInterruptLogs()\n        if (response.status === 'success') {\n          this.interrupts = response.data.logs\n        }\n      } catch (error) {\n        console.error('获取中断日志失败:', error)\n      } finally {\n        this.loading = false\n      }\n    },\n    // 格式化时间戳\n    formatTimestamp(timestamp) {\n      return new Date(timestamp).toLocaleString()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.memory-management {\n  padding: 10px;\n}\n\n.memory-info {\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  margin-bottom: 10px;\n  flex-wrap: nowrap;\n}\n\n.info-item {\n  white-space: nowrap;\n}\n\n.memory-blocks {\n  border: 1px solid #dcdfe6;\n  padding: 8px;\n  background-color: #f5f7fa;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.memory-row {\n  display: flex;\n  gap: 1px;\n  margin-bottom: 1px;\n  justify-content: center;\n}\n\n.memory-block {\n  width: 20px;\n  height: 20px;\n  border: 1px solid #dcdfe6;\n  cursor: pointer;\n}\n\n.memory-block.allocated {\n  background-color: #409eff;\n}\n\n.memory-block.free {\n  background-color: #f0f9eb;\n}\n\n.memory-usage {\n  flex: 1;\n  min-width: 200px;\n  margin-left: 20px;\n}\n\n.usage-label {\n  margin-bottom: 5px;\n  font-weight: bold;\n  white-space: nowrap;\n}\n\n.interrupt-handling {\n  margin-top: 20px;\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 4px;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n  height: 230px;\n}\n\n.interrupt-handling h3 {\n  margin: 0 0 10px 0;\n  font-size: 16px;\n  flex-shrink: 0;\n}\n\n.interrupt-list {\n  margin-top: 15px;\n  max-height: 180px;\n  overflow-y: auto;\n  position: relative;\n}\n\n.interrupt-content {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\n.interrupt-message {\n  font-weight: 500;\n  color: #303133;\n}\n\n.interrupt-result {\n  color: #606266;\n  font-size: 0.9em;\n}\n\n/* 自定义滚动条样式 */\n.interrupt-list::-webkit-scrollbar {\n  width: 6px;\n}\n\n.interrupt-list::-webkit-scrollbar-thumb {\n  background-color: #909399;\n  border-radius: 3px;\n}\n\n.interrupt-list::-webkit-scrollbar-track {\n  background-color: #f5f7fa;\n}\n</style> ","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MemoryManagement.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MemoryManagement.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./MemoryManagement.vue?vue&type=template&id=4a076d39&scoped=true\"\nimport script from \"./MemoryManagement.vue?vue&type=script&lang=js\"\nexport * from \"./MemoryManagement.vue?vue&type=script&lang=js\"\nimport style0 from \"./MemoryManagement.vue?vue&type=style&index=0&id=4a076d39&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4a076d39\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"file-system\"},[_c('div',{staticClass:\"file-control\"},[_c('div',{staticStyle:{\"margin-bottom\":\"12px\",\"font-size\":\"16px\"}},[_vm._v(\" 当前目录：\"+_vm._s(_vm.currentPath)+\" \")]),_c('div',{staticStyle:{\"margin-bottom\":\"12px\",\"display\":\"flex\",\"align-items\":\"center\"}},[_c('span',{staticStyle:{\"margin-right\":\"8px\"}},[_vm._v(\"切换目录：\")]),_c('el-input',{staticStyle:{\"width\":\"300px\",\"margin-right\":\"8px\"},attrs:{\"placeholder\":\"/ .. 目录名称\",\"size\":\"small\"},model:{value:(_vm.changeDirInput),callback:function ($$v) {_vm.changeDirInput=$$v},expression:\"changeDirInput\"}}),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":_vm.handleChangeDirectory}},[_vm._v(\"切换\")])],1),_c('div',{staticStyle:{\"margin-bottom\":\"12px\",\"display\":\"flex\",\"gap\":\"12px\"}},[_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"small\"},on:{\"click\":function($event){_vm.showCreateDir = !_vm.showCreateDir}}},[_vm._v(\"创建目录\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){_vm.showCreateFile = !_vm.showCreateFile}}},[_vm._v(\"创建文件\")])],1),(_vm.showCreateDir)?_c('div',{staticStyle:{\"margin-bottom\":\"12px\",\"display\":\"flex\",\"align-items\":\"center\",\"gap\":\"8px\"}},[_c('span',[_vm._v(\"目录名称：\")]),_c('el-input',{staticStyle:{\"width\":\"200px\"},attrs:{\"size\":\"small\"},model:{value:(_vm.createDirName),callback:function ($$v) {_vm.createDirName=$$v},expression:\"createDirName\"}}),_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"small\"},on:{\"click\":_vm.handleCreateDirectory}},[_vm._v(\"提交\")]),_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){_vm.showCreateDir = false}}},[_vm._v(\"取消\")])],1):_vm._e(),(_vm.showCreateFile)?_c('div',{staticStyle:{\"margin-bottom\":\"12px\",\"display\":\"flex\",\"align-items\":\"center\",\"gap\":\"8px\"}},[_c('span',[_vm._v(\"文件名称：\")]),_c('el-input',{staticStyle:{\"width\":\"200px\"},attrs:{\"size\":\"small\"},model:{value:(_vm.createFileName),callback:function ($$v) {_vm.createFileName=$$v},expression:\"createFileName\"}}),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":_vm.handleCreateFile}},[_vm._v(\"提交\")]),_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){_vm.showCreateFile = false}}},[_vm._v(\"取消\")])],1):_vm._e(),_c('div',{staticClass:\"file-tree\"},[_c('h3',[_vm._v(\"文件系统结构\")]),_c('el-tree',{attrs:{\"data\":_vm.fileTree,\"props\":_vm.defaultProps,\"default-expand-all\":\"\"},on:{\"node-click\":_vm.handleNodeClick},scopedSlots:_vm._u([{key:\"default\",fn:function({ node, data }){return _c('span',{staticClass:\"custom-tree-node\"},[_c('span',[_c('i',{class:data.type === 'directory' ? 'el-icon-folder' : 'el-icon-document'}),_vm._v(\" \"+_vm._s(node.label)+\" \")]),_c('span',[_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":() => _vm.deleteNode(node, data)}},[_vm._v(\" 删除 \")])],1)])}}])})],1)]),_c('div',{staticClass:\"disk-blocks\"},[_c('h2',[_vm._v(\"磁盘空间分配\")]),_c('div',{staticClass:\"disk-info\"},[_c('div',[_vm._v(\"总空间: \"+_vm._s(_vm.totalSpace)+\"MB\")]),_c('div',[_vm._v(\"已用空间: \"+_vm._s(_vm.usedSpace)+\"MB\")]),_c('div',[_vm._v(\"空闲空间: \"+_vm._s(_vm.freeSpace)+\"MB\")]),_c('div',[_vm._v(\"利用率: \"+_vm._s(_vm.diskUsagePercentage)+\"%\")]),_c('el-progress',{staticStyle:{\"margin-top\":\"2px\",\"width\":\"500px\",\"height\":\"30px\"},attrs:{\"percentage\":_vm.diskUsagePercentage,\"status\":_vm.diskUsageStatus,\"format\":_vm.diskUsageFormat}})],1),_c('div',{staticClass:\"disk-blocks-grid\"},_vm._l((_vm.diskRows),function(row,rowIndex){return _c('div',{key:rowIndex,staticClass:\"disk-row\"},_vm._l((row),function(block,blockIndex){return _c('div',{key:blockIndex,staticClass:\"disk-block\",class:{\n            'allocated': block.status === 'ALLOCATED',\n            'free': block.status === 'FREE'\n          },attrs:{\"title\":_vm.getBlockTooltip(block)}})}),0)}),0),_c('div',{staticClass:\"file-content-area\"},[_c('div',{staticClass:\"content-header\"},[_c('h3',[_vm._v(\"当前文件: \"+_vm._s(_vm.currentFile || '未选择文件'))]),_c('div',{staticClass:\"content-actions\"},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\",\"disabled\":!_vm.currentFile},on:{\"click\":function($event){_vm.isEditing = !_vm.isEditing}}},[_vm._v(\" \"+_vm._s(_vm.isEditing ? '保存' : '写入文件内容')+\" \")]),_c('el-button',{attrs:{\"type\":\"info\",\"size\":\"small\",\"disabled\":!_vm.currentFile},on:{\"click\":_vm.closeCurrentFile}},[_vm._v(\" 关闭文件 \")])],1)]),_c('div',{staticClass:\"content-body\"},[(_vm.isEditing)?_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":10,\"placeholder\":\"请输入文件内容\"},model:{value:(_vm.fileContent),callback:function ($$v) {_vm.fileContent=$$v},expression:\"fileContent\"}}):_c('div',{staticClass:\"content-display\"},[_vm._v(\" \"+_vm._s(_vm.fileContent || '暂无文件内容')+\" \")])],1)])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import request from './config'\n\n// 目录操作相关接口\nexport const getCurrentPath = () => {\n  return request({\n    url: '/filesystem/current-path',\n    method: 'get'\n  })\n}\n\nexport const getDirectoryTree = () => {\n  return request({\n    url: '/filesystem/tree',\n    method: 'get'\n  })\n}\n\nexport const createDirectory = (name) => {\n  return request({\n    url: '/filesystem/directory',\n    method: 'post',\n    params: { name }\n  })\n}\n\nexport const changeDirectory = (path) => {\n  return request({\n    url: '/filesystem/change-directory',\n    method: 'post',\n    params: { path }\n  })\n}\n\nexport const listDirectory = () => {\n  return request({\n    url: '/filesystem/list',\n    method: 'get'\n  })\n}\n\nexport const deleteDirectory = (name) => {\n  return request({\n    url: '/filesystem/directory',\n    method: 'delete',\n    params: { name }\n  })\n}\n\n// 文件操作相关接口\nexport const createFile = (name) => {\n  return request({\n    url: '/filesystem/file',\n    method: 'post',\n    params: { name }\n  })\n}\n\nexport const openFile = (name) => {\n  return request({\n    url: '/filesystem/file/open',\n    method: 'post',\n    params: { name }\n  })\n}\n\nexport const closeFile = (name) => {\n  return request({\n    url: '/filesystem/file/close',\n    method: 'post',\n    params: { name }\n  })\n}\n\nexport const readFileContent = (name) => {\n  return request({\n    url: '/filesystem/file/content',\n    method: 'get',\n    params: { name }\n  })\n}\n\nexport const writeFileContent = (name, content) => {\n  console.log('传给后端前的内容：', content)\n  return request({\n    url: '/filesystem/file/content',\n    method: 'post',\n    params: { name },\n    data: content,\n    headers: {\n      'Content-Type': 'text/plain'\n    },\n    // transformRequest: [(data) => data] // 禁用自动字符串化\n  })\n}\n\nexport const deleteFile = (name) => {\n  return request({\n    url: '/filesystem/file',\n    method: 'delete',\n    params: { name }\n  })\n}\n\nexport const getDiskStatus = () => {\n  return request({\n    url: '/filesystem/disk-status',\n    method: 'get'\n  })\n}","<template>\n  <div class=\"file-system\">\n    <div class=\"file-control\">\n      <!-- 第一行：当前目录 -->\n      <div style=\"margin-bottom: 12px; font-size: 16px;\">\n        当前目录：{{ currentPath }}\n      </div>\n      <!-- 第二行：切换目录 -->\n      <div style=\"margin-bottom: 12px; display: flex; align-items: center;\">\n        <span style=\"margin-right: 8px;\">切换目录：</span>\n        <el-input\n          v-model=\"changeDirInput\"\n          placeholder=\"/ .. 目录名称\"\n          style=\"width: 300px; margin-right: 8px;\"\n          size=\"small\"\n        ></el-input>\n        <el-button type=\"primary\" size=\"small\" @click=\"handleChangeDirectory\">切换</el-button>\n      </div>\n      <!-- 第三行：创建目录/文件按钮 -->\n      <div style=\"margin-bottom: 12px; display: flex; gap: 12px;\">\n        <el-button type=\"success\" size=\"small\" @click=\"showCreateDir = !showCreateDir\">创建目录</el-button>\n        <el-button type=\"primary\" size=\"small\" @click=\"showCreateFile = !showCreateFile\">创建文件</el-button>\n      </div>\n      <!-- 第四行：创建目录输入框 -->\n      <div v-if=\"showCreateDir\" style=\"margin-bottom: 12px; display: flex; align-items: center; gap: 8px;\">\n        <span>目录名称：</span>\n        <el-input v-model=\"createDirName\" size=\"small\" style=\"width: 200px;\"></el-input>\n        <el-button type=\"success\" size=\"small\" @click=\"handleCreateDirectory\">提交</el-button>\n        <el-button size=\"small\" @click=\"showCreateDir = false\">取消</el-button>\n      </div>\n      <!-- 创建文件输入框 -->\n      <div v-if=\"showCreateFile\" style=\"margin-bottom: 12px; display: flex; align-items: center; gap: 8px;\">\n        <span>文件名称：</span>\n        <el-input v-model=\"createFileName\" size=\"small\" style=\"width: 200px;\"></el-input>\n        <el-button type=\"primary\" size=\"small\" @click=\"handleCreateFile\">提交</el-button>\n        <el-button size=\"small\" @click=\"showCreateFile = false\">取消</el-button>\n      </div>\n      <!-- 文件树结构保持不变 -->\n      <div class=\"file-tree\">\n        <h3>文件系统结构</h3>\n        <el-tree\n          :data=\"fileTree\"\n          :props=\"defaultProps\"\n          @node-click=\"handleNodeClick\"\n          default-expand-all\n        >\n          <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\n            <span>\n              <i :class=\"data.type === 'directory' ? 'el-icon-folder' : 'el-icon-document'\"></i>\n              {{ node.label }}\n            </span>\n            <span>\n              <el-button\n                type=\"text\"\n                size=\"mini\"\n                @click=\"() => deleteNode(node, data)\">\n                删除\n              </el-button>\n            </span>\n          </span>\n        </el-tree>\n      </div>\n    </div>\n\n    <div class=\"disk-blocks\">\n      <h2>磁盘空间分配</h2>\n      <div class=\"disk-info\">\n        <div>总空间: {{ totalSpace }}MB</div>\n        <div>已用空间: {{ usedSpace }}MB</div>\n        <div>空闲空间: {{ freeSpace }}MB</div>\n        <div>利用率: {{ diskUsagePercentage }}%</div>\n        <el-progress \n          :percentage=\"diskUsagePercentage\" \n          :status=\"diskUsageStatus\"\n          :format=\"diskUsageFormat\"\n          style=\"margin-top: 2px;width: 500px;height: 30px;\"\n        ></el-progress>\n      </div>\n      \n      <div class=\"disk-blocks-grid\">\n        <div v-for=\"(row, rowIndex) in diskRows\" :key=\"rowIndex\" class=\"disk-row\">\n          <div\n            v-for=\"(block, blockIndex) in row\"\n            :key=\"blockIndex\"\n            class=\"disk-block\"\n            :class=\"{\n              'allocated': block.status === 'ALLOCATED',\n              'free': block.status === 'FREE'\n            }\"\n            :title=\"getBlockTooltip(block)\"\n          ></div>\n        </div>\n      </div>\n\n      <!-- 添加文件内容显示和编辑区域 -->\n      <div class=\"file-content-area\">\n        <div class=\"content-header\">\n          <h3>当前文件: {{ currentFile || '未选择文件' }}</h3>\n          <div class=\"content-actions\">\n            <el-button \n              type=\"primary\" \n              size=\"small\" \n              :disabled=\"!currentFile\"\n              @click=\"isEditing = !isEditing\"\n            >\n              {{ isEditing ? '保存' : '写入文件内容' }}\n            </el-button>\n            <el-button \n              type=\"info\" \n              size=\"small\" \n              :disabled=\"!currentFile\"\n              @click=\"closeCurrentFile\"\n            >\n              关闭文件\n            </el-button>\n          </div>\n        </div>\n        <div class=\"content-body\">\n          <el-input\n            v-if=\"isEditing\"\n            type=\"textarea\"\n            v-model=\"fileContent\"\n            :rows=\"10\"\n            placeholder=\"请输入文件内容\"\n          ></el-input>\n          <div v-else class=\"content-display\">\n            {{ fileContent || '暂无文件内容' }}\n          </div>\n        </div>\n      </div>\n    </div>\n    \n  </div>\n</template>\n\n<script>\nimport {\n  getCurrentPath,\n  getDirectoryTree,\n  createDirectory,\n  createFile,\n  deleteDirectory,\n  deleteFile,\n  openFile,\n  closeFile,\n  readFileContent,\n  writeFileContent,\n  changeDirectory,\n  getDiskStatus\n} from '@/api/file'\n\nexport default {\n  name: 'FileSystem',\n  data() {\n    return {\n      fileForm: {\n        name: '',\n        type: 'file',\n        size: 1\n      },\n      fileTree: [],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      },\n      totalSpace: 8192,\n      usedSpace: 0,\n      freeSpace: 8192,\n      blockSize: 32,\n      diskRows: [],\n      blocksPerRow: 32,\n      currentPath: '/',\n      loading: false,\n      currentFile: null,\n      fileContent: '',\n      isEditing: false,\n      showCreateDir: false,\n      createDirName: '',\n      showCreateFile: false,\n      createFileName: '',\n      writeFileName: '',\n      writeFileContent: '',\n      changeDirInput: '',\n      usagePercentage: 0,\n      usedBlocks: 0,\n    }\n  },\n  created() {\n    this.initializeDisk()\n    this.fetchFileTree()\n    this.fetchCurrentPath()\n  },\n  methods: {\n    initializeDisk() {\n      const totalBlocks = Math.ceil(this.totalSpace / this.blockSize)\n      const rows = Math.ceil(totalBlocks / this.blocksPerRow)\n      \n      this.diskRows = Array(rows).fill().map(() => \n        Array(this.blocksPerRow).fill().map(() => ({\n          status: 'FREE',\n          fileId: null,\n          size: this.blockSize\n        }))\n      )\n      this.fetchDiskData()\n    },\n    async fetchDiskData(){\n      const response = await getDiskStatus()\n      this.usagePercentage = response.status.usagePercentage\n      this.usedSpace = response.status.usedBlocks * 32\n      this.freeSpace = response.status.freeBlocks * 32\n      this.usedBlocks = response.status.usedBlocks\n      \n      // 计算总行数\n      const totalBlocks = Math.ceil(this.totalSpace / this.blockSize)\n      const rows = Math.ceil(totalBlocks / this.blocksPerRow)\n      \n      // 创建新的磁盘块数组\n      this.diskRows = Array(rows).fill().map((_, rowIndex) => \n        Array(this.blocksPerRow).fill().map((_, blockIndex) => {\n          const blockNumber = rowIndex * this.blocksPerRow + blockIndex\n          return {\n            status: blockNumber < this.usedBlocks ? 'ALLOCATED' : 'FREE',\n            fileId: blockNumber < this.usedBlocks ? `file_${blockNumber}` : null,\n            size: this.blockSize\n          }\n        })\n      )\n    },\n    getBlockTooltip(block) {\n      if (block.status === 'ALLOCATED') {\n        return `文件: ${block.fileId}\\n大小: ${block.size}MB`\n      }\n      return '空闲块'\n    },\n\n    async fetchFileTree() {\n      try {\n        const response = await getDirectoryTree()\n        if (response.success) {\n          this.fileTree = [response.tree]\n        }\n      } catch (error) {\n        this.$message.error('获取文件树失败')\n      }\n    },\n\n    async fetchCurrentPath() {\n      try {\n        const response = await getCurrentPath()\n        this.currentPath = response\n        console.log(this.currentPath)\n      } catch (error) {\n        this.$message.error('获取当前路径失败')\n      }\n    },\n\n    async createFileOrDir() {\n      if (!this.fileForm.name) {\n        this.$message.warning('请输入名称')\n        return\n      }\n\n      try {\n        if (this.fileForm.type === 'directory') {\n          await createDirectory(this.fileForm.name)\n        } else {\n          await createFile(this.fileForm.name)\n        }\n        this.$message.success(`${this.fileForm.type === 'directory' ? '目录' : '文件'}创建成功`)\n        this.fileForm.name = ''\n        this.fetchFileTree()\n      } catch (error) {\n        this.$message.error(`${this.fileForm.type === 'directory' ? '目录' : '文件'}创建失败`)\n      }\n    },\n\n    async handleNodeClick(data) {\n      if (data.type === 'directory') {\n        this.currentFile = null\n        this.fileContent = ''\n      } else if (data.type === 'file') {\n        try {\n          await openFile(data.name)\n          const response = await readFileContent(data.name)\n          console.log('后端返回的完整响应:', response)\n          console.log('响应类型:', typeof response)\n          console.log('content类型:', typeof response.content)\n          console.log('content值:', response.content)\n          if (response.success) {\n            this.currentFile = data.name\n            let content = response.content || ''\n            console.log('处理前的content:', content)\n            // 删除所有空字符（\\u0000）\n            content = content.replace(/\\0/g, '')\n            // 删除字符串开头和结尾的引号\n            content = content.replace(/^\"|\"$/g, '')\n            this.fileContent = content\n            console.log('处理后的文件内容:', this.fileContent)\n          }\n        } catch (error) {\n          console.error('打开文件错误:', error)\n          this.$message.error('打开文件失败')\n        }\n      }\n    },\n\n    async deleteNode(node, data) {\n      try {\n        let response;\n        if (data.type === 'directory') {\n          response = await deleteDirectory(data.name)\n        } else {\n          response = await deleteFile(data.name)\n        }\n        if (response.success) {\n          this.$message.success(`${data.type === 'directory' ? '目录' : '文件'}删除成功`)\n          this.fetchFileTree()\n          this.fetchDiskData()\n        } else {\n          this.$message.error(response.message || `${data.type === 'directory' ? '目录' : '文件'}删除失败`)\n        }\n      } catch (error) {\n        this.$message.error(`${data.type === 'directory' ? '目录' : '文件'}删除失败`)\n      }\n    },\n\n    async closeCurrentFile() {\n      if (!this.currentFile) return\n      \n      try {\n        await closeFile(this.currentFile)\n        this.currentFile = null\n        this.fileContent = ''\n        this.isEditing = false\n        this.$message.success('文件已关闭')\n      } catch (error) {\n        this.$message.error('关闭文件失败')\n      }\n    },\n\n    async saveFileContent() {\n      if (!this.currentFile) return\n      \n      try {\n        await writeFileContent(this.currentFile, this.fileContent)\n        this.isEditing = false\n        this.fetchDiskData()\n        this.$message.success('文件保存成功')\n      } catch (error) {\n        this.$message.error('文件保存失败')\n      }\n    },\n\n    async handleChangeDirectory() {\n      try {\n        console.log('切换目录请求参数:',this.changeDirInput)\n        console.log('切换目录请求参数类型:', typeof this.changeDirInput)\n        const response = await changeDirectory(String(this.changeDirInput).trim())\n        console.log('切换目录响应:', response)\n        if (response.success) {\n          this.$message.success('切换目录成功')\n          this.fetchFileTree()\n          this.fetchCurrentPath()\n          this.changeDirInput = ''\n        } else {\n          this.$message.error(response.message || '切换目录失败')\n        }\n      } catch (error) {\n        console.error('切换目录错误:', error)\n        this.$message.error('切换目录失败')\n      }\n    },\n\n    async handleCreateDirectory() {\n      try {\n        const response = await createDirectory(this.createDirName)\n        if (response.success) {\n          this.$message.success('创建目录成功')\n          this.showCreateDir = false\n          this.createDirName = ''\n          this.fetchFileTree()\n          this.fetchCurrentPath()\n        } else {\n          this.$message.error(response.message || '创建目录失败')\n        }\n      } catch (error) {\n        this.$message.error('创建目录失败')\n      }\n    },\n\n    async handleCreateFile() {\n      if (!this.createFileName) {\n        this.$message.warning('请输入文件名称')\n        return\n      }\n      try {\n        const response = await createFile(this.createFileName)\n        if (response.success) {\n          this.$message.success('文件创建成功')\n          this.showCreateFile = false\n          this.createFileName = ''\n          this.fetchFileTree()\n          this.fetchDiskData()\n        } else {\n          this.$message.error(response.message || '创建文件失败')\n        }\n      } catch (error) {\n        console.error('创建文件错误:', error)\n        this.$message.error('创建文件失败')\n      }\n    },\n\n    async handleWriteContent() {\n      if (!this.writeFileName || !this.writeFileContent) {\n        this.$message.warning('文件名称和内容不能为空')\n        return\n      }\n      try {\n        const response = await writeFileContent(this.writeFileName, this.writeFileContent)\n        if (response.success) {\n          this.$message.success('文件内容写入成功')\n          this.fetchFileTree()\n          this.fetchDiskData()\n        } else {\n          this.$message.error(response.message || '写入文件内容失败')\n        }\n      } catch (error) {\n        console.error('写入文件内容错误:', error)\n        this.$message.error('写入文件内容失败')\n      }\n    },\n\n    resetWriteContentDialog() {\n      this.writeFileName = ''\n      this.writeFileContent = ''\n    }\n  },\n  computed: {\n    diskUsagePercentage() {\n      return this.usagePercentage \n    },\n    diskUsageStatus() {\n      const percentage = this.diskUsagePercentage\n      if (percentage >= 90) return 'exception'\n      if (percentage >= 70) return 'warning'\n      return 'success'\n    },\n    diskUsageFormat() {\n      return (percentage) => `${percentage}%`\n    }\n  },\n  watch: {\n    isEditing(newVal) {\n      if (!newVal && this.currentFile) {\n        this.saveFileContent()\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.file-system {\n  display: flex;\n  gap: 20px;\n  padding: 20px;\n  height: calc(100vh - 120px); /* 减去头部和padding的高度 */\n}\n\n.file-control {\n  flex: 4;\n  display: flex;\n  flex-direction: column;\n  border-right: 1px solid #dcdfe6;\n  padding-right: 20px;\n  font-size: 16px;\n}\n\n/* 添加表单相关样式 */\n:deep(.el-form-item__label) {\n  font-size: 16px !important;\n}\n\n:deep(.el-input__inner) {\n  font-size: 16px !important;\n}\n\n:deep(.el-radio__label) {\n  font-size: 16px !important;\n}\n\n:deep(.el-input-number__decrease),\n:deep(.el-input-number__increase) {\n  font-size: 16px !important;\n}\n\n:deep(.el-input-number__input) {\n  font-size: 16px !important;\n}\n\n:deep(.el-button) {\n  font-size: 16px !important;\n}\n\n.file-tree {\n  margin-top: 20px;\n  flex: 1;\n  overflow-y: auto;\n}\n\n.disk-blocks {\n  flex: 6;\n  display: flex;\n  flex-direction: column;\n}\n\n.disk-info {\n  display: flex;\n  gap: 20px;\n  margin-bottom: 15px;\n  font-size: 16px;\n}\n\n.disk-blocks-grid {\n  border: 1px solid #dcdfe6;\n  padding: 15px;\n  background-color: #ffffff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: fit-content;\n}\n\n.disk-row {\n  display: flex;\n  gap: 2px;\n  margin-bottom: 2px;\n  justify-content: center;\n}\n\n.disk-block {\n  width: 28px;\n  height: 28px;\n  border: 1px solid #dcdfe6;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.disk-block:hover {\n  transform: scale(1.1);\n  z-index: 1;\n}\n\n.disk-block.allocated {\n  background-color: #409eff;\n}\n\n.disk-block.free {\n  background-color: #f0f9eb;\n}\n\n.custom-tree-node {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 14px;\n  padding-right: 8px;\n}\n\n.file-content-area {\n  margin-top: 20px;\n  border: 1px solid #dcdfe6;\n  border-radius: 4px;\n  padding: 15px;\n  background-color: #ffffff;\n}\n\n.content-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 5px;\n}\n\n.content-header h3 {\n  margin: 0;\n  font-size: 16px;\n}\n\n.content-body {\n  min-height: 200px;\n}\n\n.content-display {\n  padding: 10px;\n  min-height: 200px;\n  background-color: #f5f7fa;\n  border-radius: 4px;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n:deep(.el-textarea__inner) {\n  font-size: 14px;\n  font-family: monospace;\n}\n</style> ","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./FileSystem.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./FileSystem.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./FileSystem.vue?vue&type=template&id=e192c1ac&scoped=true\"\nimport script from \"./FileSystem.vue?vue&type=script&lang=js\"\nexport * from \"./FileSystem.vue?vue&type=script&lang=js\"\nimport style0 from \"./FileSystem.vue?vue&type=style&index=0&id=e192c1ac&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e192c1ac\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <el-tabs v-model=\"activeTab\" type=\"border-card\">\n      <el-tab-pane label=\"进程、内存、设备、中断管理\" name=\"process\">\n        <div class=\"tab-content\">\n          <system-clock></system-clock>\n          <div class=\"management-container\">\n            <process-management class=\"left-panel\"></process-management>\n            <memory-management class=\"right-panel\"></memory-management>\n          </div>\n        </div>\n      </el-tab-pane>\n      \n      <el-tab-pane label=\"文件系统\" name=\"file\">\n        <div class=\"tab-content\">\n          <system-clock></system-clock>\n          <file-system></file-system>\n        </div>\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n\n<script>\nimport SystemClock from './components/SystemClock.vue'\nimport ProcessManagement from './components/ProcessManagement.vue'\nimport MemoryManagement from './components/MemoryManagement.vue'\nimport FileSystem from './components/FileSystem.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    SystemClock,\n    ProcessManagement,\n    MemoryManagement,\n    FileSystem,\n  },\n  data() {\n    return {\n      activeTab: 'process'\n    }\n  }\n}\n</script>\n\n<style>\nhtml, body {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n#app {\n  font-family: 'Microsoft YaHei', Arial, sans-serif;\n  color: #2c3e50;\n  background-color: #f5f7fa;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n}\n\n.el-tabs {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.el-tabs__content {\n  flex: 1;\n  overflow: auto;\n}\n\n.el-tab-pane {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.tab-content {\n  flex: 1;\n  padding: 20px;\n  box-sizing: border-box;\n  margin-top: 10px;\n  margin-left: 10px;\n  margin-right: 10px;\n  margin-bottom: 40px;\n}\n\n.management-container {\n  display: flex;\n  gap: 20px;\n  width: 100%;\n  height: 100%;\n}\n\n.left-panel {\n  flex: 6;\n  min-width: 0;\n\n}\n\n.right-panel {\n  flex: 4;\n  min-width: 0;\n  overflow: auto;\n}\n\n</style> ","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=cb353f36\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=cb353f36&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    isRunning: false,\n    currentTime: '00:00:00',\n    seconds: 0,\n    timer: null\n  },\n  mutations: {\n    SET_RUNNING(state, isRunning) {\n      state.isRunning = isRunning\n    },\n    SET_CURRENT_TIME(state, time) {\n      state.currentTime = time\n    },\n    SET_SECONDS(state, seconds) {\n      state.seconds = seconds\n    },\n    SET_TIMER(state, timer) {\n      state.timer = timer\n    }\n  },\n  actions: {\n    startClock({ commit, state, dispatch }) {\n      commit('SET_RUNNING', true)\n      const timer = setInterval(() => {\n        commit('SET_SECONDS', state.seconds + 1)\n        dispatch('updateDisplay')\n      }, 1000)\n      commit('SET_TIMER', timer)\n    },\n    pauseClock({ commit, state }) {\n      commit('SET_RUNNING', false)\n      if (state.timer) {\n        clearInterval(state.timer)\n        commit('SET_TIMER', null)\n      }\n    },\n    updateDisplay({ commit, state }) {\n      const hours = Math.floor(state.seconds / 3600)\n      const minutes = Math.floor((state.seconds % 3600) / 60)\n      const secs = state.seconds % 60\n      const time = `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(secs).padStart(2, '0')}`\n      commit('SET_CURRENT_TIME', time)\n    }\n  },\n  getters: {\n    isClockRunning: state => state.isRunning,\n    currentTime: state => state.currentTime\n  },\n  modules: {\n  }\n}) ","import Vue from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-chalk/index.css'\n\nVue.use(ElementUI)\nVue.config.productionTip = false\n\nnew Vue({\n  store,\n  render: h => h(App)\n}).$mount('#app') ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmyos_frontend\"] = self[\"webpackChunkmyos_frontend\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], () => (__webpack_require__(1496)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_c","_self","attrs","model","value","activeTab","callback","$$v","expression","staticClass","staticRenderFns","_v","_s","formatTime","currentTime","service","axios","baseURL","timeout","interceptors","request","use","config","error","console","Promise","reject","response","data","getCurrentTime","url","method","name","timer","methods","seconds","hours","Math","floor","minutes","secs","String","padStart","updateTime","startTimer","setInterval","clearTimer","clearInterval","created","beforeDestroy","component","processForm","$set","priority","memorySize","on","createProcess","_l","readyQueue","process","key","id","getPriorityType","runningQueue","blockedQueue","terminatedQueue","handleSchedulingAlgorithmChange","schedulingAlgorithm","schedulingOptions","item","label","staticStyle","allProcesses","text","filterPriority","scopedSlots","_u","fn","scope","row","filterState","getStateType","state","getStateText","createTime","$event","handleEnableDevice","handleTerminate","deviceDialogVisible","devices","filterDeviceType","filterDeviceStatus","getStatusType","status","getDeviceStatusText","currentProcessId","remainingTime","showAllocateDialog","handleReleaseDevice","allocateDialogVisible","allocateForm","selectedDevice","slot","handleAllocate","processApi","processData","post","getAllProcesses","get","getProcessesByState","getCurrentProcess","deleteProcess","delete","updateProcessState","put","terminateProcess","updateProcessPriority","getProcessInfo","getProcessStats","setSchedulingAlgorithm","algorithm","getSchedulingAlgorithm","batchUpdatePriorities","priorities","interruptApi","triggerInterrupt","reason","getAllDevices","requestDevice","processId","deviceId","params","releaseDevice","selectedState","searchKeyword","computed","filteredProcesses","result","filter","keyword","toLowerCase","includes","success","fetchProcesses","types","texts","timestamp","date","Date","toLocaleString","$message","message","some","p","allResponse","currentProcessResponse","fetchDevices","log","device","all","handleSearch","newValue","originalValue","type","statuses","totalMemory","usedMemory","freeMemory","memoryUsagePercentage","memoryUsageColor","memoryRows","rowIndex","block","blockIndex","class","getBlockTooltip","directives","rawName","loading","interrupts","interrupt","getInterruptType","formatTimestamp","getFreeMemorySize","getMemoryStatus","getFreeMemoryBlocks","getMemoryUsage","getInterruptLogs","blockSize","blocksPerRow","updateInterval","round","percentage","initializeMemory","fetchMemoryData","fetchInterruptLogs","totalBlocks","ceil","rows","Array","fill","map","size","allocateMemory","blocksNeeded","allocatedBlocks","releaseMemory","freedSize","freeSize","memoryStatus","updateMemoryBlocks","_","index","length","typeMap","addInterrupt","now","time","getHours","getMinutes","getSeconds","unshift","logs","currentPath","changeDirInput","handleChangeDirectory","showCreateDir","showCreateFile","createDirName","handleCreateDirectory","_e","createFileName","handleCreateFile","fileTree","defaultProps","handleNodeClick","node","click","deleteNode","totalSpace","usedSpace","freeSpace","diskUsagePercentage","diskUsageStatus","diskUsageFormat","diskRows","currentFile","isEditing","closeCurrentFile","fileContent","getCurrentPath","getDirectoryTree","createDirectory","changeDirectory","path","deleteDirectory","createFile","openFile","closeFile","readFileContent","writeFileContent","content","headers","deleteFile","getDiskStatus","fileForm","children","writeFileName","usagePercentage","usedBlocks","initializeDisk","fetchFileTree","fetchCurrentPath","fileId","fetchDiskData","freeBlocks","blockNumber","tree","createFileOrDir","warning","replace","saveFileContent","trim","handleWriteContent","resetWriteContentDialog","watch","newVal","components","SystemClock","ProcessManagement","MemoryManagement","FileSystem","Vue","Vuex","isRunning","mutations","SET_RUNNING","SET_CURRENT_TIME","SET_SECONDS","SET_TIMER","actions","startClock","commit","dispatch","pauseClock","updateDisplay","getters","isClockRunning","modules","ElementUI","productionTip","store","h","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","m","amdO","deferred","O","chunkIds","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}